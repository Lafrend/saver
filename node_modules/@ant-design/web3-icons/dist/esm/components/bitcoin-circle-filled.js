function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
import * as React from 'react';
import AntdIcon from '@ant-design/icons';
var SVGComponent = function SVGComponent(props) {
  return /*#__PURE__*/_jsx("svg", _objectSpread(_objectSpread({}, props), {}, {
    children: /*#__PURE__*/_jsxs("g", {
      fill: "none",
      fillRule: "evenodd",
      children: [/*#__PURE__*/_jsx("circle", {
        fill: "#000",
        cx: "513",
        cy: "512",
        r: "512"
      }), /*#__PURE__*/_jsxs("g", {
        fill: "#FFF",
        children: [/*#__PURE__*/_jsx("path", {
          fill: "none",
          d: "M0 0h1024v1024H0z"
        }), /*#__PURE__*/_jsx("path", {
          d: "M748.759 449.88c9.883-66.62-40.419-102.43-109.2-126.321l22.311-90.243-54.476-13.69-21.722 87.864c-14.32-3.598-29.03-6.993-43.646-10.357l21.877-88.444L509.458 195l-22.326 90.212c-11.855-2.723-23.492-5.413-34.787-8.246l.062-.281-75.127-18.915-14.492 58.67s40.418 9.34 39.565 9.919c22.064 5.553 26.05 20.276 25.384 31.948l-25.415 102.806c1.52.391 3.49.954 5.663 1.83-1.815-.453-3.755-.955-5.756-1.439L366.605 605.52c-2.7 6.759-9.543 16.897-24.965 13.048.543.799-39.596-9.965-39.596-9.965L275 671.482l70.891 17.82c13.188 3.332 26.113 6.82 38.836 10.106l-22.544 91.276 54.414 13.69 22.327-90.306a2052.442 2052.442 0 0 0 43.413 11.359l-22.25 89.884L514.563 829l22.545-91.103c92.892 17.725 162.745 10.576 192.147-74.144 23.693-68.215-1.18-107.562-50.054-133.22 35.593-8.277 62.404-31.887 69.558-80.653ZM624.29 625.875c-16.834 68.214-130.736 31.338-167.664 22.091l29.915-120.923c36.928 9.293 155.343 27.692 137.749 98.832Zm16.85-176.981c-15.36 62.05-110.162 30.524-140.915 22.795l27.122-109.674c30.753 7.73 129.79 22.153 113.793 86.879Z",
          fillRule: "nonzero"
        })]
      })]
    })
  }));
};
SVGComponent.defaultProps = {
  viewBox: "0 0 1024 1024",
  xmlns: "http://www.w3.org/2000/svg"
};
import classnames from 'classnames';
import { ConfigProvider } from 'antd';
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
export var BitcoinCircleFilled = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var _React$useContext = React.useContext(ConfigProvider.ConfigContext),
    getPrefixCls = _React$useContext.getPrefixCls;
  var prefixCls = getPrefixCls('web3-icon-bitcoin-circle-filled');
  return /*#__PURE__*/_jsx(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {
    className: classnames(prefixCls, props.className),
    ref: ref,
    component: SVGComponent
  }));
});
BitcoinCircleFilled.displayName = 'BitcoinCircleFilled';