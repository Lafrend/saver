function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
import * as React from 'react';
import AntdIcon from '@ant-design/icons';
var SVGComponent = function SVGComponent(props) {
  return /*#__PURE__*/_jsxs("svg", _objectSpread(_objectSpread({}, props), {}, {
    children: [/*#__PURE__*/_jsx("path", {
      stroke: "#E17726",
      fill: "#E17726",
      d: "M973.44 0 573.22 295.976l74.623-174.48z"
    }), /*#__PURE__*/_jsx("path", {
      d: "m50.56 0 396.564 298.412L376.157 121.8 50.56 0Zm778.813 686.042L722.77 848.646l228.13 62.727 65.18-221.677-186.707-3.654Zm-821.15 3.654L73.1 911.373l227.522-62.727-105.994-162.604-186.403 3.654Z",
      stroke: "#E27625",
      fill: "#E27625"
    }), /*#__PURE__*/_jsx("path", {
      d: "m288.438 411.382-63.353 95.613 225.39 10.353-7.31-242.688-154.727 137.026v-.304Zm447.124.304L578.4 271.616l-5.178 245.732 225.39-10.353-63.049-95.309Zm-434.94 436.96 136.756-65.772-117.568-91.35-19.189 157.122Zm286.305-66.077 135.843 66.077-18.275-157.427-117.568 91.35Z",
      stroke: "#E27625",
      fill: "#E27625"
    }), /*#__PURE__*/_jsx("path", {
      d: "m722.77 848.646-135.843-65.772 10.965 88.305-1.219 37.454 126.097-59.987Zm-422.149 0 126.706 59.987-.914-37.454 10.965-88.305-136.757 65.772Z",
      stroke: "#D5BFB2",
      fill: "#D5BFB2"
    }), /*#__PURE__*/_jsx("path", {
      d: "m429.459 632.754-112.695-32.886 79.8-36.54 33.2 69.426h-.305Zm164.778 0 33.504-69.73 80.104 36.54-113.608 33.495v-.305Z",
      stroke: "#233447",
      fill: "#233447"
    }), /*#__PURE__*/_jsx("path", {
      d: "m300.621 848.646 19.798-162.604-125.792 3.654 105.994 158.95Zm402.96-162.604 19.189 162.604 106.603-158.95-125.792-3.654Zm95.334-179.047-225.39 10.353 20.712 115.71 33.504-70.035 80.104 36.54 91.07-92.568Zm-482.151 92.873 79.8-36.54 33.2 69.426 21.015-115.71-225.39-10.049 91.375 92.873Z",
      stroke: "#CC6228",
      fill: "#CC6228"
    }), /*#__PURE__*/_jsx("path", {
      d: "m225.39 506.995 94.42 184.224-3.046-91.35-91.374-92.874Zm482.455 92.873-3.655 91.35 94.42-184.223-90.765 92.873Zm-257.066-82.52-21.32 115.71 26.803 136.418 6.091-179.96-11.574-72.168Zm122.442 0-10.965 71.863 5.482 180.265 26.499-136.722-21.016-115.71v.304Z",
      stroke: "#E27525",
      fill: "#E27525"
    }), /*#__PURE__*/_jsx("path", {
      d: "m594.237 632.754-26.499 136.722 19.189 13.398 117.263-91.35 3.655-91.656-113.608 32.886Zm-277.473-32.886 3.046 91.35 117.568 91.351 18.884-13.093-26.499-136.722-113.304-32.886h.305Z",
      stroke: "#F5841F",
      fill: "#F5841F"
    }), /*#__PURE__*/_jsx("path", {
      stroke: "#C0AC9D",
      fill: "#C0AC9D",
      d: "m596.978 908.633.914-37.454-10.356-8.526H436.464l-10.051 8.526.914 37.454-126.706-59.987 44.469 36.54L434.94 947h153.813l90.156-62.118 43.86-36.236-126.097 59.987z"
    }), /*#__PURE__*/_jsx("path", {
      stroke: "#161616",
      fill: "#161616",
      d: "m586.927 782.57-19.189-13.094H456.262l-18.884 13.398-10.965 88.305 10.051-8.526h151.072l10.356 8.526-10.965-88.305z"
    }), /*#__PURE__*/_jsx("path", {
      d: "M990.496 315.16 1024 152.25 973.44 0 586.622 286.232l148.94 125.15 210.16 61.204 46.297-53.896-20.102-14.616 31.98-29.233-24.366-18.879 31.981-24.36-21.32-16.443h.304ZM0 151.945 34.113 315.16l-21.93 16.139 32.59 24.36-24.366 19.183 31.676 29.233-20.102 14.616 46.296 53.896 210.16-60.9 148.94-125.759L50.56 0 0 151.946Z",
      stroke: "#763E1A",
      fill: "#763E1A"
    }), /*#__PURE__*/_jsx("path", {
      d: "m945.723 472.586-210.16-60.9 63.352 95.31-94.42 184.223 124.878-1.523h186.708l-70.358-217.11Zm-657.285-61.204-210.16 61.204-70.054 217.11h186.708l124.878 1.523-94.42-184.224 63.352-95.613h-.304ZM573.22 517.348l13.706-231.421 60.916-164.43H376.157l60.916 164.43 13.706 231.421 5.178 72.472v179.656h111.781l.61-179.656 4.873-72.472Z",
      stroke: "#F5841F",
      fill: "#F5841F"
    })]
  }));
};
SVGComponent.defaultProps = {
  viewBox: "0 -38 1024 1024",
  xmlns: "http://www.w3.org/2000/svg"
};
import classnames from 'classnames';
import { ConfigProvider } from 'antd';
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
export var MetaMaskColorful = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var _React$useContext = React.useContext(ConfigProvider.ConfigContext),
    getPrefixCls = _React$useContext.getPrefixCls;
  var prefixCls = getPrefixCls('web3-icon-metamask-colorful');
  return /*#__PURE__*/_jsx(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {
    className: classnames(prefixCls, props.className),
    ref: ref,
    component: SVGComponent
  }));
});
MetaMaskColorful.displayName = 'MetaMaskColorful';