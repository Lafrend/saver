"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CryptoPriceBalance = void 0;
var _react = _interopRequireWildcard(require("react"));
var _antd = require("antd");
var _classnames = _interopRequireDefault(require("classnames"));
var _utils = require("../utils");
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
const CryptoPriceBalance = ({
  className,
  style,
  hashId,
  symbol = 'ETH',
  decimals = 18,
  value = 0,
  fixed,
  icon
}) => {
  const {
    getPrefixCls
  } = (0, _react.useContext)(_antd.ConfigProvider.ConfigContext);
  const prefixCls = getPrefixCls('web3-crypto-price-balance');
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)("span", {
    style: style,
    className: (0, _classnames.default)(className, hashId, prefixCls),
    children: [icon ? /*#__PURE__*/(0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
      children: [icon, " "]
    }) : null, (0, _utils.formatBalance)(value, decimals, fixed), " ", symbol]
  });
};
exports.CryptoPriceBalance = CryptoPriceBalance;
CryptoPriceBalance.displayName = 'CryptoPriceBalance';