"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.formatBalance = exports.formatAddress = exports.fillWith0x = void 0;
const fillWith0x = (address = '') => {
  const filledAddress = address.startsWith('0x') ? address : `0x${address}`;
  return filledAddress;
};
exports.fillWith0x = fillWith0x;
const formatAddress = (address = '', groupSize = 4) => {
  const formattedGroups = [];
  const has0x = address.startsWith('0x');
  const formatText = has0x ? address.slice(2) : address;
  for (let i = 0; i < formatText.length; i += groupSize) {
    const group = formatText.slice(i, i + groupSize);
    formattedGroups.push(group);
  }
  const formattedText = formattedGroups.join(' ');
  return has0x ? `0x ${formattedText}` : formattedText;
};
exports.formatAddress = formatAddress;
const formatBalance = (value, decimals, fixed) => {
  const bigValue = typeof value === 'bigint' ? value : BigInt(value);
  const divisor = BigInt(10 ** decimals);
  const eth = bigValue / divisor;
  const ethFraction = bigValue % divisor;
  if (ethFraction === 0n && fixed === undefined) {
    return `${eth}`;
  }
  let fractionStr = ethFraction.toString().padStart(decimals, '0');
  if (fixed === undefined) {
    return `${eth}.${fractionStr.replace(/0+$/, '')}`;
  }
  fractionStr = fractionStr.substring(0, fixed).padEnd(fixed, '0');
  return `${eth}.${fractionStr}`;
};
exports.formatBalance = formatBalance;