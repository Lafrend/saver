"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setAlpha = exports.lighten = void 0;
exports.useStyle = useStyle;
var _cssinjs = require("@ant-design/cssinjs");
var _tinycolor = require("@ctrl/tinycolor");
var _antd = require("antd");
var _react = require("react");
const {
  useToken
} = _antd.theme;

/**
 * Set alpha for a color
 * @example (#fff, 0.5) => rgba(255, 255, 255, 0.5)
 * @param baseColor {string}
 * @param alpha {0-1}
 * @returns rgba {string}
 */
const setAlpha = (baseColor, alpha) => new _tinycolor.TinyColor(baseColor).setAlpha(alpha).toRgbString();

/**
 * Lighten a color
 * @example (#000, 50) => #808080
 * @param baseColor {string}
 * @param brightness {0-100}
 * @returns hexColor {string}
 */
exports.setAlpha = setAlpha;
const lighten = (baseColor, brightness) => {
  const instance = new _tinycolor.TinyColor(baseColor);
  return instance.lighten(brightness).toHexString();
};
exports.lighten = lighten;
/**
 * useStyle for css in js
 * @param componentName {string} 组件的名字
 * @param styleFn {GenerateStyle} 生成样式的函数
 * @returns UseStyleResult
 */
function useStyle(componentName, styleFn) {
  const {
    theme,
    token,
    hashId
  } = useToken();
  const {
    getPrefixCls
  } = (0, _react.useContext)(_antd.ConfigProvider.ConfigContext);
  const web3Token = {
    ...token,
    web3ComponentsCls: `.${getPrefixCls('web3')}`,
    antCls: `.${getPrefixCls()}`
  };
  return {
    wrapSSR: (0, _cssinjs.useStyleRegister)({
      theme: theme,
      token: web3Token,
      hashId,
      path: [componentName]
    }, () => styleFn(web3Token)),
    hashId
  };
}