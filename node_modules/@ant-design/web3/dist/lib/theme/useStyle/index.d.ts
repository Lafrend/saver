import type { CSSInterpolation } from '@ant-design/cssinjs';
import type { GlobalToken } from 'antd/lib/theme/interface';
import type React from 'react';
/**
 * Set alpha for a color
 * @example (#fff, 0.5) => rgba(255, 255, 255, 0.5)
 * @param baseColor {string}
 * @param alpha {0-1}
 * @returns rgba {string}
 */
export declare const setAlpha: (baseColor: string, alpha: number) => string;
/**
 * Lighten a color
 * @example (#000, 50) => #808080
 * @param baseColor {string}
 * @param brightness {0-100}
 * @returns hexColor {string}
 */
export declare const lighten: (baseColor: string, brightness: number) => string;
export type GenerateStyle<ComponentToken extends object = GlobalToken, ReturnType = CSSInterpolation> = (token: ComponentToken, ...rest: any[]) => ReturnType;
export type UseStyleResult = {
    wrapSSR: (node: React.ReactElement) => React.ReactElement;
    hashId: string;
};
export type Web3AliasToken = GlobalToken & {
    /**
     * classname for web3 compoennts
     * @type {string}
     * @example .ant-pro
     */
    web3ComponentsCls: string;
    /**
     * antd 的 className
     * @type {string}
     * @example .ant
     */
    antCls: string;
};
/**
 * useStyle for css in js
 * @param componentName {string} 组件的名字
 * @param styleFn {GenerateStyle} 生成样式的函数
 * @returns UseStyleResult
 */
export declare function useStyle(componentName: string, styleFn: (token: Web3AliasToken) => CSSInterpolation): {
    wrapSSR: (node: React.ReactElement<any, string | React.JSXElementConstructor<any>>) => React.JSX.Element;
    hashId: string;
};
