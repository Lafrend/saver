"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("react");
var _context = require("../context");
var _MainPanelHeader = _interopRequireDefault(require("./MainPanelHeader"));
var _utils = require("../../utils");
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
/* eslint-disable react/no-unknown-property */

const CardItem = ({
  icon,
  title,
  desc,
  link,
  onClick
}) => {
  const {
    prefixCls
  } = (0, _react.useContext)(_context.connectModalContext);
  const content = /*#__PURE__*/(0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
      className: `${prefixCls}-card-icon`,
      children: icon
    }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: `${prefixCls}-card-content`,
      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: `${prefixCls}-card-title`,
        children: title
      }), /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
        className: `${prefixCls}-card-description`,
        children: desc
      })]
    })]
  });
  return link ? /*#__PURE__*/(0, _jsxRuntime.jsx)("a", {
    className: `${prefixCls}-card-item`,
    target: "_blank",
    href: link,
    rel: "noreferrer",
    children: content
  }) : /*#__PURE__*/(0, _jsxRuntime.jsx)("div", {
    className: `${prefixCls}-card-item`,
    onClick: onClick,
    children: content
  });
};
const WalletCard = () => {
  const {
    prefixCls,
    selectedWallet,
    updatePanelRoute,
    localeMessage,
    getMessage
  } = (0, _react.useContext)(_context.connectModalContext);
  const selectedExtension = (0, _react.useMemo)(() => selectedWallet?.extensions ? selectedWallet.extensions.find(item => item.key === (0, _utils.getPlatform)()) : undefined, [selectedWallet?.extensions]);
  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_MainPanelHeader.default, {
      title: getMessage(localeMessage.walletCardPanelTitle, {
        selectedWalletName: selectedWallet.name
      })
    }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
      className: `${prefixCls}-card-list`,
      children: [selectedExtension && /*#__PURE__*/(0, _jsxRuntime.jsx)(CardItem, {
        link: selectedExtension.link,
        icon: typeof selectedExtension.browserIcon === 'string' ? /*#__PURE__*/(0, _jsxRuntime.jsx)("img", {
          src: selectedExtension.browserIcon
        }) : selectedExtension.browserIcon,
        title: getMessage(localeMessage.walletCardExtensionTitle, {
          selectedWalletName: selectedWallet.name,
          selectedExtensionBrowserName: selectedExtension.browserName
        }),
        desc: selectedExtension.description
      }), selectedWallet?.app && /*#__PURE__*/(0, _jsxRuntime.jsx)(CardItem, {
        icon: typeof selectedWallet.icon === 'string' ? /*#__PURE__*/(0, _jsxRuntime.jsx)("img", {
          src: selectedWallet.icon
        }) : selectedWallet.icon,
        title: getMessage(localeMessage.walletCardAppTitle, {
          selectedWalletName: selectedWallet.name
        }),
        desc: localeMessage.walletCardAppDesc,
        onClick: () => {
          updatePanelRoute('downloadQrCode');
        }
      })]
    })]
  });
};
var _default = exports.default = WalletCard;