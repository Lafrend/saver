"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  ConnectModal: true
};
exports.ConnectModal = void 0;
var _react = _interopRequireDefault(require("react"));
var _antd = require("antd");
var _ModalPanel = _interopRequireDefault(require("./components/ModalPanel"));
var _configProvider = require("antd/lib/config-provider");
var _style = require("./style");
var _classnames = _interopRequireDefault(require("classnames"));
var _useMode = _interopRequireDefault(require("./hooks/useMode"));
var _jsxRuntime = require("react/jsx-runtime");
var _interface = require("./interface");
Object.keys(_interface).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _interface[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _interface[key];
    }
  });
});
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const ConnectModal = props => {
  const {
    title,
    open,
    footer,
    onWalletSelected,
    className,
    mode,
    ...restProps
  } = props;
  const {
    getPrefixCls
  } = _react.default.useContext(_configProvider.ConfigContext);
  const {
    isSimple
  } = (0, _useMode.default)(mode);

  // Style
  const prefixCls = getPrefixCls('web3-connect-modal');
  const {
    wrapSSR,
    hashId
  } = (0, _style.useStyle)(prefixCls);
  return wrapSSR( /*#__PURE__*/(0, _jsxRuntime.jsx)(_antd.Modal, {
    footer: null,
    width: isSimple ? 380 : 737,
    ...restProps,
    className: (0, _classnames.default)(prefixCls, className, hashId),
    rootClassName: (0, _classnames.default)(`${prefixCls}-root`, props?.rootClassName),
    open: open,
    onCancel: e => {
      props?.onCancel?.(e);
    },
    children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_ModalPanel.default, {
      ...props
    })
  }));
};
exports.ConnectModal = ConnectModal;
ConnectModal.displayName = 'ConnectModal';
ConnectModal.ModalPanel = _ModalPanel.default;