"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useNFT;
var _react = require("react");
var _useProvider = _interopRequireDefault(require("./useProvider"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function useNFT(address, tokenId, getNFTMetadata) {
  const [metadata, setMetadata] = (0, _react.useState)({});
  const [loading, setLoading] = (0, _react.useState)(false);
  const [error, setError] = (0, _react.useState)();
  const {
    getNFTMetadata: getNFTMetadataFunc
  } = (0, _useProvider.default)({
    getNFTMetadata
  });
  (0, _react.useEffect)(() => {
    if (!address || !tokenId) {
      return;
    }
    if (getNFTMetadataFunc) {
      setLoading(true);
      getNFTMetadataFunc({
        address,
        tokenId: BigInt(tokenId)
      }).then(data => {
        setMetadata(data);
      }).catch(err => {
        setError(err);
      }).finally(() => {
        setLoading(false);
      });
    } else {
      setError(new Error('Provider is not ready'));
    }
  }, [address, tokenId, getNFTMetadataFunc]);
  return {
    loading,
    metadata,
    error
  };
}