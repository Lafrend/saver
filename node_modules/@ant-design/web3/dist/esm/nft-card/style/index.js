function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
import { useStyle as useAntdStyle } from "../../theme/useStyle";
var genNFTCardStyle = function genNFTCardStyle(token) {
  var _$concat4, _$concat6, _$concat9, _$concat10, _$concat11, _$concat12, _$concat13, _$concat14, _$concat15;
  var componentCls = token.componentCls,
    nftCardWidth = token.nftCardWidth,
    colorWhite = token.colorWhite,
    nftCardBorderRadius = token.nftCardBorderRadius,
    padding = token.padding,
    colorBorder = token.colorBorder,
    fontSizeHeading3 = token.fontSizeHeading3,
    lineHeightHeading3 = token.lineHeightHeading3,
    colorText = token.colorText,
    margin = token.margin,
    fontSizeLG = token.fontSizeLG,
    marginXS = token.marginXS,
    marginLG = token.marginLG,
    controlHeightLG = token.controlHeightLG,
    borderRadiusLG = token.borderRadiusLG,
    colorFillSecondary = token.colorFillSecondary,
    colorTextQuaternary = token.colorTextQuaternary,
    colorTextSecondary = token.colorTextSecondary,
    fontSizeHeading5 = token.fontSizeHeading5,
    lineHeightHeading5 = token.lineHeightHeading5,
    fontSize = token.fontSize,
    lineHeight = token.lineHeight,
    antCls = token.antCls;
  return _defineProperty({}, "".concat(componentCls, "-container"), (_$concat15 = {
    width: nftCardWidth,
    backgroundColor: colorWhite,
    borderRadius: nftCardBorderRadius,
    border: "1px solid ".concat(colorBorder),
    overflow: 'hidden'
  }, _defineProperty(_$concat15, "".concat(componentCls, "-inner"), (_$concat10 = {
    padding: padding,
    gap: padding,
    display: 'flex',
    flexDirection: 'column'
  }, _defineProperty(_$concat10, "".concat(componentCls, "-content"), _defineProperty({
    borderRadius: nftCardBorderRadius,
    overflow: 'hidden',
    position: 'relative'
  }, "".concat(componentCls, "-serial-number"), {
    fontSize: fontSizeHeading3,
    lineHeight: lineHeightHeading3,
    color: colorWhite,
    opacity: 0.25,
    fontWeight: 500,
    position: 'absolute',
    insetInlineStart: marginXS,
    top: 8,
    zIndex: 1
  })), _defineProperty(_$concat10, "".concat(componentCls, "-body"), (_$concat9 = {}, _defineProperty(_$concat9, "".concat(componentCls, "-serial-number"), {
    fontSize: fontSize,
    lineHeight: lineHeight,
    color: colorText,
    opacity: 0.5,
    letterSpacing: 0.44,
    marginBottom: margin
  }), _defineProperty(_$concat9, "".concat(componentCls, "-name"), {
    fontSize: fontSizeHeading3,
    lineHeight: lineHeightHeading3,
    color: colorText,
    fontWeight: 500,
    marginBottom: margin
  }), _defineProperty(_$concat9, "".concat(componentCls, "-description"), {
    fontSize: fontSizeHeading5,
    lineHeight: lineHeightHeading5,
    color: colorTextSecondary,
    marginBottom: margin
  }), _defineProperty(_$concat9, "".concat(componentCls, "-info"), (_$concat6 = {
    display: 'flex',
    justifyContent: 'space-between',
    fontSize: fontSizeLG,
    color: colorText,
    fontWeight: 500
  }, _defineProperty(_$concat6, "".concat(componentCls, "-price"), _defineProperty({
    gap: marginXS,
    display: 'flex',
    alignItems: 'center'
  }, "".concat(antCls, "icon"), {
    background: colorFillSecondary,
    borderRadius: '50%'
  })), _defineProperty(_$concat6, "".concat(componentCls, "-likes"), _defineProperty({
    gap: marginXS,
    display: 'flex',
    alignItems: 'center'
  }, "".concat(componentCls, "-like-icon"), (_$concat4 = {
    fontSize: fontSizeHeading3,
    width: 24,
    height: 28,
    cursor: 'pointer',
    position: 'relative'
  }, _defineProperty(_$concat4, "".concat(componentCls, "-like-icon-icon-heart"), {
    svg: {
      path: {
        fill: colorText
      }
    }
  }), _defineProperty(_$concat4, "".concat(componentCls, "-like-icon-group"), {
    transition: "all ".concat(token.motionDurationMid, " ").concat(token.motionEaseInOut),
    opacity: 0
  }), _defineProperty(_$concat4, "&".concat(componentCls, "-like-icon-liked"), _defineProperty({}, "".concat(componentCls, "-like-icon-group"), {
    opacity: 1
  })), _$concat4))), _$concat6)), _defineProperty(_$concat9, "".concat(componentCls, "-action"), _defineProperty({
    marginTop: marginLG
  }, "".concat(antCls, "-btn"), {
    backgroundColor: colorFillSecondary,
    height: controlHeightLG,
    borderRadius: borderRadiusLG,
    border: 'none',
    color: colorText,
    fontWeight: 500,
    width: '100%'
  })), _defineProperty(_$concat9, "".concat(componentCls, "-footer"), _defineProperty({
    color: colorTextSecondary,
    fontSize: fontSize
  }, "".concat(antCls, "-divider"), {
    borderColor: colorTextQuaternary,
    marginTop: margin,
    marginBottom: marginXS
  })), _$concat9)), _$concat10)), _defineProperty(_$concat15, "".concat(componentCls, "-skeleton"), (_$concat11 = {}, _defineProperty(_$concat11, "&-wrap", {
    borderRadius: "".concat(nftCardBorderRadius, "px ").concat(nftCardBorderRadius, "px 0 0"),
    boxSizing: 'border-box',
    overflow: 'hidden'
  }), _defineProperty(_$concat11, "&-content".concat(antCls, "-skeleton-element"), _defineProperty({
    width: '100%'
  }, "".concat(antCls, "-skeleton-image"), {
    width: '100%',
    height: 200,
    borderRadius: nftCardBorderRadius
  })), _defineProperty(_$concat11, '&-body', {
    width: "calc(100% - ".concat(padding * 2, "px)")
  }), _$concat11)), _defineProperty(_$concat15, "&".concat(componentCls, "-pithy"), (_$concat13 = {}, _defineProperty(_$concat13, "".concat(componentCls, "-inner"), {
    padding: 0
  }), _defineProperty(_$concat13, "".concat(componentCls, "-content"), {
    borderRadius: 0
  }), _defineProperty(_$concat13, "".concat(componentCls, "-body"), {
    padding: "0 ".concat(padding, "px ").concat(padding, "px")
  }), _defineProperty(_$concat13, "".concat(componentCls, "-skeleton"), (_$concat12 = {}, _defineProperty(_$concat12, "&-content".concat(antCls, "-skeleton-element"), _defineProperty({}, "".concat(antCls, "-skeleton-image"), {
    borderRadius: 0
  })), _defineProperty(_$concat12, '&-body', {
    marginInline: padding
  }), _defineProperty(_$concat12, "&-button".concat(antCls, "-skeleton-element"), {
    marginInline: padding,
    width: "calc(100% - ".concat(padding * 2, "px)")
  }), _defineProperty(_$concat12, "&-footer".concat(antCls, "-skeleton-element"), {
    marginBlockEnd: padding,
    marginInlineStart: padding
  }), _$concat12)), _$concat13)), _defineProperty(_$concat15, "&".concat(componentCls, "-theme-dark"), (_$concat14 = {
    backgroundColor: 'rgb(0, 0, 0)'
  }, _defineProperty(_$concat14, "".concat(componentCls, "-inner"), {
    background: 'rgba(255,255,255,0.25)',
    backgroundImage: 'radial-gradient(circle at 52% 1.1e+02%, rgba(77,186,255,0.53) 0%, rgba(0,0,0,0.00) 58%),radial-gradient(circle at 50% 38%, #FFFFFF -50%, rgba(0,0,0,0.21) 53%)'
  }), _defineProperty(_$concat14, "&".concat(componentCls, "-pithy"), {
    borderWidth: 0
  }), _$concat14)), _$concat15));
};
export function useStyle(prefixCls) {
  return useAntdStyle('NFTCard', function (token) {
    var nftCardToken = _objectSpread(_objectSpread({
      nftCardWidth: 282,
      nftCardBorderRadius: token.borderRadiusLG * 2
    }, token), {}, {
      componentCls: ".".concat(prefixCls)
    });
    return [genNFTCardStyle(nftCardToken)];
  });
}