function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
var _excluded = ["style", "antdImageProps", "className", "type", "address", "tokenId", "price", "like", "showAction", "actionText", "footer", "onActionClick", "getNFTMetadata", "locale"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import { useStyle } from "./style";
import React, { useEffect, useState } from 'react';
import classNames from 'classnames';
import { Button, Divider, Image, ConfigProvider, Space, Skeleton } from 'antd';
import Icon from '@ant-design/icons';
import useNFT from "../hooks/useNFT";
var HeartSvg = function HeartSvg(props) {
  return /*#__PURE__*/_jsx("svg", _objectSpread(_objectSpread({}, props), {}, {
    children: /*#__PURE__*/_jsx("path", {
      d: "M21.633 6.647a6.095 6.095 0 0 0-1.334-1.94A6.219 6.219 0 0 0 15.93 2.93 6.26 6.26 0 0 0 12 4.315 6.26 6.26 0 0 0 8.07 2.93 6.219 6.219 0 0 0 3.7 4.706a6.057 6.057 0 0 0-1.825 4.33c0 .78.16 1.593.476 2.42.265.692.644 1.409 1.13 2.133.768 1.146 1.825 2.341 3.138 3.553a35.08 35.08 0 0 0 4.42 3.453l.556.356a.753.753 0 0 0 .808 0l.556-.356a35.534 35.534 0 0 0 4.42-3.453c1.312-1.212 2.37-2.407 3.138-3.553a10.72 10.72 0 0 0 1.13-2.133c.316-.827.476-1.64.476-2.42a5.968 5.968 0 0 0-.49-2.39ZM12 19.097S3.656 13.75 3.656 9.035c0-2.388 1.976-4.324 4.414-4.324 1.713 0 3.199.956 3.93 2.353a4.426 4.426 0 0 1 3.93-2.353c2.438 0 4.414 1.936 4.414 4.324 0 4.716-8.344 10.062-8.344 10.062Z",
      fill: "#000",
      fillRule: "nonzero",
      fillOpacity: ".723",
      opacity: ".85"
    })
  }));
};
HeartSvg.defaultProps = {
  width: "24",
  height: "24",
  xmlns: "http://www.w3.org/2000/svg"
};
var HeartFilledSvg = function HeartFilledSvg(props) {
  return /*#__PURE__*/_jsxs("svg", _objectSpread(_objectSpread({}, props), {}, {
    children: [/*#__PURE__*/_jsxs("defs", {
      children: [/*#__PURE__*/_jsxs("linearGradient", {
        x1: "50%",
        y1: "0%",
        x2: "50%",
        y2: "100%",
        id: "ant-web3-icon-nft-card-icon-heart-filled-1",
        children: [/*#__PURE__*/_jsx("stop", {
          stopColor: "#FF8B8B",
          offset: "0%"
        }), /*#__PURE__*/_jsx("stop", {
          stopColor: "#FF1717",
          offset: "100%"
        })]
      }), /*#__PURE__*/_jsxs("filter", {
        x: "-10%",
        y: "-11.1%",
        width: "120%",
        height: "122.2%",
        filterUnits: "objectBoundingBox",
        id: "ant-web3-icon-nft-card-icon-heart-filled-3",
        children: [/*#__PURE__*/_jsx("feGaussianBlur", {
          stdDeviation: "1.5",
          in: "SourceAlpha",
          result: "shadowBlurInner1"
        }), /*#__PURE__*/_jsx("feOffset", {
          dx: "1",
          dy: "1",
          in: "shadowBlurInner1",
          result: "shadowOffsetInner1"
        }), /*#__PURE__*/_jsx("feComposite", {
          in: "shadowOffsetInner1",
          in2: "SourceAlpha",
          operator: "arithmetic",
          k2: "-1",
          k3: "1",
          result: "shadowInnerInner1"
        }), /*#__PURE__*/_jsx("feColorMatrix", {
          values: "0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.746667395 0",
          in: "shadowInnerInner1"
        })]
      }), /*#__PURE__*/_jsx("path", {
        d: "M36.516 21.689a6.05 6.05 0 0 0-1.317-1.926 6.12 6.12 0 0 0-1.945-1.29 6.118 6.118 0 0 0-2.37-.473A6.162 6.162 0 0 0 27 19.375 6.162 6.162 0 0 0 23.12 18c-.822 0-1.618.158-2.37.472a6.106 6.106 0 0 0-3.263 3.217 5.988 5.988 0 0 0-.486 2.37c0 .774.157 1.581.47 2.402.262.686.637 1.398 1.116 2.117.76 1.137 1.803 2.323 3.1 3.526a34.67 34.67 0 0 0 4.366 3.426l.549.353a.74.74 0 0 0 .798 0l.549-.353a35.117 35.117 0 0 0 4.366-3.426c1.297-1.203 2.34-2.389 3.1-3.526.48-.719.857-1.43 1.116-2.117.313-.82.47-1.628.47-2.402a5.946 5.946 0 0 0-.484-2.37Z",
        id: "a"
      })]
    }), /*#__PURE__*/_jsxs("g", {
      transform: "translate(-17 -18)",
      fillRule: "nonzero",
      fill: "none",
      children: [/*#__PURE__*/_jsx("use", {
        fill: "url(#ant-web3-icon-nft-card-icon-heart-filled-1)",
        xlinkHref: "#a"
      }), /*#__PURE__*/_jsx("use", {
        fill: "#000",
        filter: "url(#ant-web3-icon-nft-card-icon-heart-filled-3)",
        xlinkHref: "#a"
      })]
    })]
  }));
};
HeartFilledSvg.defaultProps = {
  width: "20",
  height: "18",
  xmlns: "http://www.w3.org/2000/svg",
  xmlnsXlink: "http://www.w3.org/1999/xlink"
};
import useToken from 'antd/es/theme/useToken';
import { formatNumUnit, isDarkTheme } from "../utils/tool";
import { parseNumberToBigint, getWeb3AssetUrl } from '@ant-design/web3-common';
import { CryptoPrice } from "../crypto-price";
import useIntl from "../hooks/useIntl";
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
import { Fragment as _Fragment } from "react/jsx-runtime";
var customizePrefixCls = 'ant-nft-card';
var CardSkeleton = function CardSkeleton(_ref) {
  var children = _ref.children,
    loading = _ref.loading,
    prefixCls = _ref.prefixCls;
  if (loading) {
    return /*#__PURE__*/_jsxs(Space, {
      direction: "vertical",
      className: classNames("".concat(prefixCls, "-wrap")),
      children: [/*#__PURE__*/_jsx(Skeleton.Image, {
        active: true,
        className: "".concat(prefixCls, "-content")
      }), /*#__PURE__*/_jsx(Skeleton, {
        active: true,
        className: "".concat(prefixCls, "-body")
      }), /*#__PURE__*/_jsx(Skeleton.Button, {
        block: true,
        active: true,
        className: "".concat(prefixCls, "-button")
      }), /*#__PURE__*/_jsx(Divider, {
        dashed: true,
        style: {
          marginBlock: 0
        }
      }), /*#__PURE__*/_jsx(Skeleton.Input, {
        active: true,
        className: "".concat(prefixCls, "-footer")
      })]
    });
  }
  return /*#__PURE__*/_jsx(_Fragment, {
    children: children
  });
};
var NFTCard = function NFTCard(_ref2) {
  var _classNames;
  var style = _ref2.style,
    antdImageProps = _ref2.antdImageProps,
    className = _ref2.className,
    _ref2$type = _ref2.type,
    type = _ref2$type === void 0 ? 'default' : _ref2$type,
    address = _ref2.address,
    tokenId = _ref2.tokenId,
    price = _ref2.price,
    likeConfig = _ref2.like,
    showAction = _ref2.showAction,
    actionText = _ref2.actionText,
    footer = _ref2.footer,
    onActionClick = _ref2.onActionClick,
    getNFTMetadata = _ref2.getNFTMetadata,
    locale = _ref2.locale,
    metadataProps = _objectWithoutProperties(_ref2, _excluded);
  var _ref3 = likeConfig || {},
    liked = _ref3.liked,
    _ref3$totalLikes = _ref3.totalLikes,
    totalLikes = _ref3$totalLikes === void 0 ? 0 : _ref3$totalLikes,
    onLikeChange = _ref3.onLikeChange;
  var _useToken = useToken(),
    _useToken2 = _slicedToArray(_useToken, 2),
    token = _useToken2[1];
  var _useNFT = useNFT(address, parseNumberToBigint(tokenId), getNFTMetadata),
    metadata = _useNFT.metadata,
    loading = _useNFT.loading;
  var _metadataProps$name = metadataProps.name,
    name = _metadataProps$name === void 0 ? metadata.name : _metadataProps$name,
    _metadataProps$image = metadataProps.image,
    image = _metadataProps$image === void 0 ? metadata.image : _metadataProps$image,
    _metadataProps$descri = metadataProps.description,
    description = _metadataProps$descri === void 0 ? metadata.description : _metadataProps$descri;
  var _useIntl = useIntl('NFTCard', locale),
    messages = _useIntl.messages;
  var _React$useContext = React.useContext(ConfigProvider.ConfigContext),
    getPrefixCls = _React$useContext.getPrefixCls;
  var prefixCls = getPrefixCls('nft-card', customizePrefixCls);
  //================== Style ==================
  var _useStyle = useStyle(prefixCls),
    wrapSSR = _useStyle.wrapSSR,
    hashId = _useStyle.hashId;
  var mergeCls = classNames("".concat(prefixCls, "-container"), (_classNames = {}, _defineProperty(_classNames, "".concat(prefixCls, "-pithy"), type === 'pithy'), _defineProperty(_classNames, "".concat(prefixCls, "-theme-dark"), isDarkTheme(token)), _classNames), className, hashId);
  var _useState = useState(false),
    _useState2 = _slicedToArray(_useState, 2),
    like = _useState2[0],
    setLike = _useState2[1];
  var handleLikeChange = function handleLikeChange() {
    var likeValue = !like;
    if (liked === undefined) {
      setLike(likeValue);
    }
    onLikeChange === null || onLikeChange === void 0 || onLikeChange(likeValue);
  };
  var iconLikeGroup = /*#__PURE__*/_jsxs("div", {
    className: "".concat(prefixCls, "-like-icon-group"),
    style: {
      position: 'absolute',
      top: 5,
      right: -2
    },
    children: [/*#__PURE__*/_jsx(Icon, {
      component: HeartFilledSvg
    }), /*#__PURE__*/_jsx(Icon, {
      component: HeartFilledSvg,
      style: {
        transform: 'scale(0.4)',
        position: 'absolute',
        right: -8,
        top: -12
      }
    }), /*#__PURE__*/_jsx(Icon, {
      component: HeartFilledSvg,
      style: {
        transform: 'scale(0.3)',
        position: 'absolute',
        right: 10,
        top: -16
      }
    })]
  });
  useEffect(function () {
    if (liked !== undefined) {
      setLike(liked);
    }
  }, [liked]);
  var content = /*#__PURE__*/_jsxs(_Fragment, {
    children: [/*#__PURE__*/_jsxs("div", {
      className: "".concat(prefixCls, "-content"),
      children: [type !== 'pithy' && tokenId !== undefined ? /*#__PURE__*/_jsx("div", {
        className: "".concat(prefixCls, "-serial-number"),
        children: "#".concat(tokenId)
      }) : null, typeof image === 'string' ? /*#__PURE__*/_jsx(Image, _objectSpread({
        width: "100%",
        src: getWeb3AssetUrl(image)
      }, antdImageProps)) : image]
    }), /*#__PURE__*/_jsxs("div", {
      className: "".concat(prefixCls, "-body"),
      children: [tokenId !== undefined && type === 'pithy' ? /*#__PURE__*/_jsxs("div", {
        className: "".concat(prefixCls, "-serial-number"),
        children: ["No:", tokenId.toString()]
      }) : null, name ? /*#__PURE__*/_jsx("div", {
        className: "".concat(prefixCls, "-name"),
        children: name
      }) : null, description ? /*#__PURE__*/_jsx("div", {
        className: "".concat(prefixCls, "-description"),
        children: description
      }) : null, /*#__PURE__*/_jsxs("div", {
        className: "".concat(prefixCls, "-info"),
        children: [price ? /*#__PURE__*/_jsx("div", {
          className: "".concat(prefixCls, "-price"),
          children: /*#__PURE__*/_jsx(CryptoPrice, _objectSpread({}, price))
        }) : null, likeConfig ? /*#__PURE__*/_jsxs("div", {
          className: "".concat(prefixCls, "-likes"),
          children: [/*#__PURE__*/_jsxs("div", {
            className: classNames("".concat(prefixCls, "-like-icon"), _defineProperty({}, "".concat(prefixCls, "-like-icon-liked"), like)),
            onClick: handleLikeChange,
            children: [iconLikeGroup, !like ? /*#__PURE__*/_jsx(Icon, {
              component: HeartSvg,
              className: "".concat(prefixCls, "-like-icon-icon-heart")
            }) : null]
          }), /*#__PURE__*/_jsx("span", {
            className: "".concat(prefixCls, "-like-value"),
            children: formatNumUnit(totalLikes)
          })]
        }) : null]
      }), showAction ? /*#__PURE__*/_jsx("div", {
        className: "".concat(prefixCls, "-action"),
        children: /*#__PURE__*/_jsx(Button, {
          onClick: onActionClick,
          children: actionText !== null && actionText !== void 0 ? actionText : messages.actionText
        })
      }) : null, footer ? /*#__PURE__*/_jsxs("div", {
        className: "".concat(prefixCls, "-footer"),
        children: [/*#__PURE__*/_jsx(Divider, {
          dashed: true
        }), footer]
      }) : null]
    })]
  });
  return wrapSSR( /*#__PURE__*/_jsx("div", {
    className: mergeCls,
    style: style,
    children: /*#__PURE__*/_jsx("div", {
      className: "".concat(prefixCls, "-inner"),
      children: /*#__PURE__*/_jsx(CardSkeleton, {
        prefixCls: "".concat(prefixCls, "-skeleton"),
        loading: loading,
        children: content
      })
    })
  }));
};
export default NFTCard;