function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
import React, { useContext } from 'react';
import { Modal, ConfigProvider, Space, Button, Avatar, message } from 'antd';
import classNames from 'classnames';
import { Address } from "./..";
import { writeCopyText } from "../utils";
import { CryptoPrice } from "../crypto-price";
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
import { Fragment as _Fragment } from "react/jsx-runtime";
export var ProfileModal = function ProfileModal(_ref) {
  var _modalProps$styles;
  var className = _ref.className,
    intl = _ref.intl,
    __hashId__ = _ref.__hashId__,
    open = _ref.open,
    onClose = _ref.onClose,
    onDisconnect = _ref.onDisconnect,
    avatar = _ref.avatar,
    name = _ref.name,
    address = _ref.address,
    modalProps = _ref.modalProps,
    balance = _ref.balance;
  var _useContext = useContext(ConfigProvider.ConfigContext),
    getPrefixCls = _useContext.getPrefixCls;
  var prefixCls = getPrefixCls('web3-connect-button-profile-modal');
  var _message$useMessage = message.useMessage(),
    _message$useMessage2 = _slicedToArray(_message$useMessage, 2),
    messageApi = _message$useMessage2[0],
    contextHolder = _message$useMessage2[1];
  return /*#__PURE__*/_jsxs(_Fragment, {
    children: [contextHolder, /*#__PURE__*/_jsx(Modal, _objectSpread(_objectSpread({
      footer: /*#__PURE__*/_jsxs("div", {
        className: classNames("".concat(prefixCls, "-footer"), __hashId__),
        children: [address ? /*#__PURE__*/_jsx(Button, {
          onClick: function onClick() {
            writeCopyText(address).then(function () {
              messageApi.success(intl.getMessage(intl.messages.addressCopied));
            });
          },
          children: intl.getMessage(intl.messages.copyAddress)
        }) : null, /*#__PURE__*/_jsx(Button, {
          onClick: onDisconnect,
          children: intl.getMessage(intl.messages.disconnect)
        })]
      }),
      width: 280
    }, modalProps), {}, {
      onCancel: onClose,
      className: classNames(className, __hashId__, prefixCls),
      styles: _objectSpread(_objectSpread({}, modalProps === null || modalProps === void 0 ? void 0 : modalProps.styles), {}, {
        body: _objectSpread({
          textAlign: 'center'
        }, modalProps === null || modalProps === void 0 || (_modalProps$styles = modalProps.styles) === null || _modalProps$styles === void 0 ? void 0 : _modalProps$styles.body)
      }),
      open: open,
      children: /*#__PURE__*/_jsxs(Space, {
        align: "center",
        direction: "vertical",
        children: [avatar ? /*#__PURE__*/_jsx(Avatar, _objectSpread({}, avatar)) : null, name ? /*#__PURE__*/_jsx("div", {
          className: classNames("".concat(prefixCls, "-name"), __hashId__),
          children: name
        }) : null, address ? /*#__PURE__*/_jsx(Address, {
          ellipsis: false,
          address: address,
          tooltip: false,
          children: balance && /*#__PURE__*/_jsx(CryptoPrice, _objectSpread({}, balance))
        }) : null]
      })
    }))]
  });
};
ProfileModal.displayName = 'ProfileModal';