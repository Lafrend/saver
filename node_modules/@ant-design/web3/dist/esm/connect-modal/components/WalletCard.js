/* eslint-disable react/no-unknown-property */

import { useContext, useMemo } from 'react';
import { connectModalContext } from "../context";
import MainPanelHeader from "./MainPanelHeader";
import { getPlatform } from "../../utils";
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
import { Fragment as _Fragment } from "react/jsx-runtime";
var CardItem = function CardItem(_ref) {
  var icon = _ref.icon,
    title = _ref.title,
    desc = _ref.desc,
    link = _ref.link,
    onClick = _ref.onClick;
  var _useContext = useContext(connectModalContext),
    prefixCls = _useContext.prefixCls;
  var content = /*#__PURE__*/_jsxs(_Fragment, {
    children: [/*#__PURE__*/_jsx("div", {
      className: "".concat(prefixCls, "-card-icon"),
      children: icon
    }), /*#__PURE__*/_jsxs("div", {
      className: "".concat(prefixCls, "-card-content"),
      children: [/*#__PURE__*/_jsx("div", {
        className: "".concat(prefixCls, "-card-title"),
        children: title
      }), /*#__PURE__*/_jsx("div", {
        className: "".concat(prefixCls, "-card-description"),
        children: desc
      })]
    })]
  });
  return link ? /*#__PURE__*/_jsx("a", {
    className: "".concat(prefixCls, "-card-item"),
    target: "_blank",
    href: link,
    rel: "noreferrer",
    children: content
  }) : /*#__PURE__*/_jsx("div", {
    className: "".concat(prefixCls, "-card-item"),
    onClick: onClick,
    children: content
  });
};
var WalletCard = function WalletCard() {
  var _useContext2 = useContext(connectModalContext),
    prefixCls = _useContext2.prefixCls,
    selectedWallet = _useContext2.selectedWallet,
    updatePanelRoute = _useContext2.updatePanelRoute,
    localeMessage = _useContext2.localeMessage,
    getMessage = _useContext2.getMessage;
  var selectedExtension = useMemo(function () {
    return selectedWallet !== null && selectedWallet !== void 0 && selectedWallet.extensions ? selectedWallet.extensions.find(function (item) {
      return item.key === getPlatform();
    }) : undefined;
  }, [selectedWallet === null || selectedWallet === void 0 ? void 0 : selectedWallet.extensions]);
  return /*#__PURE__*/_jsxs(_Fragment, {
    children: [/*#__PURE__*/_jsx(MainPanelHeader, {
      title: getMessage(localeMessage.walletCardPanelTitle, {
        selectedWalletName: selectedWallet.name
      })
    }), /*#__PURE__*/_jsxs("div", {
      className: "".concat(prefixCls, "-card-list"),
      children: [selectedExtension && /*#__PURE__*/_jsx(CardItem, {
        link: selectedExtension.link,
        icon: typeof selectedExtension.browserIcon === 'string' ? /*#__PURE__*/_jsx("img", {
          src: selectedExtension.browserIcon
        }) : selectedExtension.browserIcon,
        title: getMessage(localeMessage.walletCardExtensionTitle, {
          selectedWalletName: selectedWallet.name,
          selectedExtensionBrowserName: selectedExtension.browserName
        }),
        desc: selectedExtension.description
      }), (selectedWallet === null || selectedWallet === void 0 ? void 0 : selectedWallet.app) && /*#__PURE__*/_jsx(CardItem, {
        icon: typeof selectedWallet.icon === 'string' ? /*#__PURE__*/_jsx("img", {
          src: selectedWallet.icon
        }) : selectedWallet.icon,
        title: getMessage(localeMessage.walletCardAppTitle, {
          selectedWalletName: selectedWallet.name
        }),
        desc: localeMessage.walletCardAppDesc,
        onClick: function onClick() {
          updatePanelRoute('downloadQrCode');
        }
      })]
    })]
  });
};
export default WalletCard;