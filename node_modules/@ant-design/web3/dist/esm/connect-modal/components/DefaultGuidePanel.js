import { Avatar, Button } from 'antd';
import React, { useContext } from 'react';
import { connectModalContext } from "../context";
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
import { Fragment as _Fragment } from "react/jsx-runtime";
var DefaultGuidePanel = function DefaultGuidePanel(props) {
  var _useContext = useContext(connectModalContext),
    localeMessage = _useContext.localeMessage;
  var defaultGuide = {
    title: localeMessage.guideTitle,
    infos: [{
      icon: 'https://mdn.alipayobjects.com/huamei_mutawc/afts/img/A*ApSUSaoUa_sAAAAAAAAAAAAADlrGAQ/original',
      title: localeMessage.guideInfos1Title,
      description: localeMessage.guideInfos1Desc
    }, {
      icon: 'https://mdn.alipayobjects.com/huamei_mutawc/afts/img/A*3lD7QpnbCPcAAAAAAAAAAAAADlrGAQ/original',
      title: localeMessage.guideInfos2Title,
      description: localeMessage.guideInfos2Desc
    }, {
      icon: 'https://mdn.alipayobjects.com/huamei_mutawc/afts/img/A*gTROQqEY_TcAAAAAAAAAAAAADlrGAQ/original',
      title: localeMessage.guideInfos3Title,
      description: localeMessage.guideInfos3Desc
    }],
    moreLink: 'https://ethereum.org/en/wallets/',
    getWalletBtnText: localeMessage.guideInfosGetWalletBtnText,
    moreLinkText: localeMessage.guideInfosMoreLinkText
  };
  var _props$guide = props.guide,
    guide = _props$guide === void 0 ? defaultGuide : _props$guide;
  var _useContext2 = useContext(connectModalContext),
    prefixCls = _useContext2.prefixCls,
    updatePanelRoute = _useContext2.updatePanelRoute;
  if (!guide) {
    return null;
  }
  var renderContent = function renderContent() {
    if ( /*#__PURE__*/React.isValidElement(guide)) {
      return guide;
    }
    var title = guide.title,
      infos = guide.infos;
    return /*#__PURE__*/_jsxs(_Fragment, {
      children: [/*#__PURE__*/_jsx("h2", {
        className: "".concat(prefixCls, "-guide-title"),
        children: title
      }), /*#__PURE__*/_jsx("div", {
        className: "".concat(prefixCls, "-guide-list"),
        children: infos.map(function (info) {
          var _info$title;
          return /*#__PURE__*/_jsxs("div", {
            className: "".concat(prefixCls, "-guide-item"),
            children: [typeof info.icon === 'string' ? /*#__PURE__*/_jsx(Avatar, {
              className: "".concat(prefixCls, "-guide-item-icon"),
              shape: "square",
              src: info.icon
            }) : info.icon, /*#__PURE__*/_jsxs("div", {
              className: "".concat(prefixCls, "-guide-item-content"),
              children: [/*#__PURE__*/_jsx("h3", {
                className: "".concat(prefixCls, "-guide-item-title"),
                children: info.title
              }), /*#__PURE__*/_jsx("div", {
                className: "".concat(prefixCls, "-guide-item-description"),
                children: info.description
              })]
            })]
          }, (_info$title = info.title) === null || _info$title === void 0 ? void 0 : _info$title.toString());
        })
      })]
    });
  };
  var _guide$getWalletBtnTe = guide.getWalletBtnText,
    getWalletBtnText = _guide$getWalletBtnTe === void 0 ? defaultGuide.getWalletBtnText : _guide$getWalletBtnTe,
    _guide$moreLinkText = guide.moreLinkText,
    moreLinkText = _guide$moreLinkText === void 0 ? defaultGuide.moreLinkText : _guide$moreLinkText;
  return /*#__PURE__*/_jsxs("div", {
    className: "".concat(prefixCls, "-guide-panel"),
    children: [renderContent(), /*#__PURE__*/_jsx(Button, {
      block: true,
      size: "large",
      type: "primary",
      className: "".concat(prefixCls, "-get-btn"),
      onClick: function onClick() {
        return updatePanelRoute('getWallet');
      },
      children: getWalletBtnText
    }), /*#__PURE__*/_jsx(Button, {
      block: true,
      type: "link",
      className: "".concat(prefixCls, "-more"),
      href: guide === null || guide === void 0 ? void 0 : guide.moreLink,
      target: "_blank",
      children: moreLinkText
    })]
  });
};
export default DefaultGuidePanel;