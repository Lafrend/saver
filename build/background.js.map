{"version":3,"file":"background.js","mappings":";;;;;;;AAAa;AACb;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,wBAAwB,mCAAmC;AAC3D;AACA,8CAA8C,4BAA4B;AAC1E,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0BAA0B;AACzD;AACA,KAAK;AACL,GAAG;AACH,C","sources":["webpack://saver/./src/background.js"],"sourcesContent":["\"use strict\";\r\n\r\n// Load stored data on extension open\r\nchrome.runtime.onInstalled.addListener(function () {\r\n  loadItems();\r\n});\r\n\r\nfunction loadItems() {\r\n  // Load stored data on extension open\r\n  chrome.storage.local.get(\"yourItemList\", function (data) {\r\n    const storedList = data.yourItemList || [];\r\n    console.log(\"Loaded items:\", storedList);\r\n  });\r\n}\r\n\r\nchrome.runtime.onInstalled.addListener(function () {\r\n  // Add a context menu item for selected text\r\n  chrome.contextMenus.create({\r\n    title: \"Сохранить\",\r\n    id: \"save\",\r\n    contexts: [\"selection\", \"image\", \"video\", \"link\"],\r\n  });\r\n});\r\n\r\nchrome.contextMenus.onClicked.addListener(function (info, tab) {\r\n  if (info.menuItemId == \"save\") {\r\n    saveItem(info);\r\n  }\r\n});\r\n\r\n// Используем chrome.commands.onCommand для обработки горячих клавиш\r\nchrome.commands.onCommand.addListener(function (command) {\r\n  if (command === \"saveItemCommand\") {\r\n    // Отправляем сообщение контент-скрипту с запросом выделенного текста\r\n    chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {\r\n      const activeTab = tabs[0];\r\n      chrome.tabs.sendMessage(activeTab.id, { command: \"getSelectedText\" });\r\n    });\r\n  }\r\n});\r\n\r\n// Обработчик сообщений от контент-скрипта\r\nchrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {\r\n  if (request.command === \"saveItem\" && request.selectedText) {\r\n    // Создаем новый элемент с выделенным текстом\r\n    const newItem = {\r\n      selectionText: request.selectedText,\r\n      createdAt: \"\",\r\n    };\r\n\r\n    // Сохраняем новый элемент с использованием существующей функции\r\n    saveItem(newItem);\r\n  }\r\n});\r\n\r\nfunction saveItem(info) {\r\n  const selected = info.selectionText || info.srcUrl || info.linkUrl || info.videoUrl || \"\";\r\n\r\n  let itemData;\r\n  itemData = selected;\r\n  // Add the new item to your list (modify this according to your list structure)\r\n  const newItem = {\r\n    createdAt: new Date().getTime(),\r\n    title: \"\",\r\n    itemData: itemData,\r\n    pinned: false,\r\n    hide: false,\r\n    fav: false,\r\n    color: \"\",\r\n    tab: \"\",\r\n    list: \"\",\r\n  };\r\n\r\n  // Save the new item to local storage or wherever you store your list\r\n  saveNewItem(newItem);\r\n}\r\n\r\nfunction saveNewItem(item) {\r\n  // Add your logic to save the item to your list using chrome.storage.local\r\n  // Modify this function according to your storage requirements\r\n  console.log(\"Saving new item:\", item);\r\n  chrome.storage.local.get(\"yourItemList\", function (data) {\r\n    const storedList = data.yourItemList || [];\r\n\r\n    // Check if the item with the same createdAt already exists\r\n    const existingItemIndex = storedList.findIndex(\r\n      (existingItem) => existingItem.createdAt === item.createdAt\r\n    );\r\n\r\n    if (existingItemIndex !== -1) {\r\n      // If the item with the same createdAt exists, remove it from the list\r\n      storedList.splice(existingItemIndex, 1);\r\n    }\r\n\r\n    // Add the new item to the beginning of the list\r\n    storedList.push(item);\r\n\r\n    chrome.storage.local.set({ yourItemList: storedList }, function () {\r\n      console.log(\"Item saved successfully:\", item);\r\n    });\r\n  });\r\n}"],"names":[],"sourceRoot":""}