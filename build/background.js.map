{"version":3,"file":"background.js","mappings":"mBAuDA,SAASA,EAASC,GAGhB,IAAIC,EACJA,EAHiBD,EAAKE,eAAiBF,EAAKG,QAAUH,EAAKI,SAAWJ,EAAKK,UAAY,GAKvF,MAAMC,EAAU,CACdC,WAAW,IAAIC,MAAOC,UACtBC,MAAO,GACPT,SAAUA,EACVU,QAAQ,EACRC,MAAM,EACNC,KAAK,EACLC,MAAO,GACPC,IAAK,GACLC,KAAM,IAOV,IAAqBC,IAHPX,EAMZY,QAAQC,IAAI,mBAAoBF,GAChCG,OAAOC,QAAQC,MAAMC,IAAI,gBAAgB,SAAUC,GACjD,MAAMC,EAAaD,EAAKE,cAAgB,GAGlCC,EAAoBF,EAAWG,WAClCC,GAAiBA,EAAatB,YAAcU,EAAKV,aAGzB,IAAvBoB,GAEFF,EAAWK,OAAOH,EAAmB,GAIvCF,EAAWM,KAAKd,GAEhBG,OAAOC,QAAQC,MAAMU,IAAI,CAAEN,aAAcD,IAAc,WACrDP,QAAQC,IAAI,2BAA4BF,EAC1C,GACF,GAzBF,CAxEAG,OAAOa,QAAQC,YAAYC,aAAY,WAMrCf,OAAOC,QAAQC,MAAMC,IAAI,gBAAgB,SAAUC,GACjD,MAAMC,EAAaD,EAAKE,cAAgB,GACxCR,QAAQC,IAAI,gBAAiBM,EAC/B,GAPF,IAUAL,OAAOa,QAAQC,YAAYC,aAAY,WAErCf,OAAOgB,aAAaC,OAAO,CACzB3B,MAAO,YACP4B,GAAI,OACJC,SAAU,CAAC,YAAa,QAAS,QAAS,SAE9C,IAEAnB,OAAOgB,aAAaI,UAAUL,aAAY,SAAUnC,EAAMe,GACjC,QAAnBf,EAAKyC,YACP1C,EAASC,EAEb,IAGAoB,OAAOsB,SAASC,UAAUR,aAAY,SAAUS,GAC9B,oBAAZA,GAEFxB,OAAOyB,KAAKC,MAAM,CAAEC,QAAQ,EAAMC,eAAe,IAAQ,SAAUH,GACjE,MAAMI,EAAYJ,EAAK,GACvBzB,OAAOyB,KAAKK,YAAYD,EAAUX,GAAI,CAAEM,QAAS,mBACnD,GAEJ,IAGAxB,OAAOa,QAAQkB,UAAUhB,aAAY,SAAUiB,EAASC,EAAQC,GACtC,aAApBF,EAAQR,SAA0BQ,EAAQG,cAQ5CxD,EANgB,CACdG,cAAekD,EAAQG,aACvBhD,UAAW,IAMjB,G","sources":["webpack://saver/./src/background.js"],"sourcesContent":["\"use strict\";\r\n\r\n// Load stored data on extension open\r\nchrome.runtime.onInstalled.addListener(function () {\r\n  loadItems();\r\n});\r\n\r\nfunction loadItems() {\r\n  // Load stored data on extension open\r\n  chrome.storage.local.get(\"yourItemList\", function (data) {\r\n    const storedList = data.yourItemList || [];\r\n    console.log(\"Loaded items:\", storedList);\r\n  });\r\n}\r\n\r\nchrome.runtime.onInstalled.addListener(function () {\r\n  // Add a context menu item for selected text\r\n  chrome.contextMenus.create({\r\n    title: \"Сохранить\",\r\n    id: \"save\",\r\n    contexts: [\"selection\", \"image\", \"video\", \"link\"],\r\n  });\r\n});\r\n\r\nchrome.contextMenus.onClicked.addListener(function (info, tab) {\r\n  if (info.menuItemId == \"save\") {\r\n    saveItem(info);\r\n  }\r\n});\r\n\r\n// Используем chrome.commands.onCommand для обработки горячих клавиш\r\nchrome.commands.onCommand.addListener(function (command) {\r\n  if (command === \"saveItemCommand\") {\r\n    // Отправляем сообщение контент-скрипту с запросом выделенного текста\r\n    chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {\r\n      const activeTab = tabs[0];\r\n      chrome.tabs.sendMessage(activeTab.id, { command: \"getSelectedText\" });\r\n    });\r\n  }\r\n});\r\n\r\n// Обработчик сообщений от контент-скрипта\r\nchrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {\r\n  if (request.command === \"saveItem\" && request.selectedText) {\r\n    // Создаем новый элемент с выделенным текстом\r\n    const newItem = {\r\n      selectionText: request.selectedText,\r\n      createdAt: \"\",\r\n    };\r\n\r\n    // Сохраняем новый элемент с использованием существующей функции\r\n    saveItem(newItem);\r\n  }\r\n});\r\n\r\nfunction saveItem(info) {\r\n  const selected = info.selectionText || info.srcUrl || info.linkUrl || info.videoUrl || \"\";\r\n\r\n  let itemData;\r\n  itemData = selected;\r\n  // Add the new item to your list (modify this according to your list structure)\r\n  const newItem = {\r\n    createdAt: new Date().getTime(),\r\n    title: \"\",\r\n    itemData: itemData,\r\n    pinned: false,\r\n    hide: false,\r\n    fav: false,\r\n    color: \"\",\r\n    tab: \"\",\r\n    list: \"\",\r\n  };\r\n\r\n  // Save the new item to local storage or wherever you store your list\r\n  saveNewItem(newItem);\r\n}\r\n\r\nfunction saveNewItem(item) {\r\n  // Add your logic to save the item to your list using chrome.storage.local\r\n  // Modify this function according to your storage requirements\r\n  console.log(\"Saving new item:\", item);\r\n  chrome.storage.local.get(\"yourItemList\", function (data) {\r\n    const storedList = data.yourItemList || [];\r\n\r\n    // Check if the item with the same createdAt already exists\r\n    const existingItemIndex = storedList.findIndex(\r\n      (existingItem) => existingItem.createdAt === item.createdAt\r\n    );\r\n\r\n    if (existingItemIndex !== -1) {\r\n      // If the item with the same createdAt exists, remove it from the list\r\n      storedList.splice(existingItemIndex, 1);\r\n    }\r\n\r\n    // Add the new item to the beginning of the list\r\n    storedList.push(item);\r\n\r\n    chrome.storage.local.set({ yourItemList: storedList }, function () {\r\n      console.log(\"Item saved successfully:\", item);\r\n    });\r\n  });\r\n}"],"names":["saveItem","info","itemData","selectionText","srcUrl","linkUrl","videoUrl","newItem","createdAt","Date","getTime","title","pinned","hide","fav","color","tab","list","item","console","log","chrome","storage","local","get","data","storedList","yourItemList","existingItemIndex","findIndex","existingItem","splice","push","set","runtime","onInstalled","addListener","contextMenus","create","id","contexts","onClicked","menuItemId","commands","onCommand","command","tabs","query","active","currentWindow","activeTab","sendMessage","onMessage","request","sender","sendResponse","selectedText"],"sourceRoot":""}