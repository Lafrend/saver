{"version":3,"file":"popup.js","mappings":";;;;;;;;;AAAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACNa;;AAEQ;;AAErB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,UAAU;AACvC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qCAAqC,0BAA0B;AAC/D;AACA;AACA,WAAW;AACX,SAAS,QAAQ;AACjB,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B;AAC7B,kCAAkC;AAClC,kCAAkC;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qCAAqC;AACrC;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC,0BAA0B;AAC3D;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sCAAsC,mBAAmB,KAAK;AAC9D;AACA,SAAS,+BAA+B,IAAI,4BAA4B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,iEAAiE;AACjE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B;;AAE7B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ,2CAA2C;AACnD,QAAQ,wCAAwC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;;AAEA,+BAA+B,0BAA0B;AACzD;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC","sources":["webpack://saver/./src/popup.css","webpack://saver/webpack/bootstrap","webpack://saver/webpack/runtime/compat get default export","webpack://saver/webpack/runtime/define property getters","webpack://saver/webpack/runtime/hasOwnProperty shorthand","webpack://saver/webpack/runtime/make namespace object","webpack://saver/./src/popup.js"],"sourcesContent":["// extracted by mini-css-extract-plugin","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\"use strict\";\n\nimport \"./popup.css\";\n\nconsole.log(\"This is a popup!\");\n\nconst listOfItems = document.getElementById(\"listOfItems\");\nconst clearAllButton = document.getElementById(\"clearAllButton\");\nconst createItemButton = document.getElementById(\"createItemButton\");\nconst rephreshButton = document.getElementById(\"rephreshButton\");\nconst sendMessage = document.getElementById(\"sendMessage\");\n\nconst loadingDiv = document.createElement(\"div\");\nconst loadingSpan = document.createElement(\"span\");\nconst backgroundDiv = document.createElement(\"div\");\nbackgroundDiv.style.backgroundColor = \"#00000027\";\nbackgroundDiv.style.zIndex = \"9998\";\nbackgroundDiv.style.width = \"100%\";\nbackgroundDiv.style.height = \"700px\";\nbackgroundDiv.style.position = \"absolute\";\nloadingSpan.textContent = \"Loading...\";\nloadingDiv.appendChild(loadingSpan);\nloadingDiv.style.position = \"absolute\";\nloadingDiv.style.left = \"50%\";\nloadingDiv.style.top = \"50%\";\nloadingDiv.style.width = \"100px\";\nloadingDiv.style.height = \"50px\";\nloadingDiv.style.zIndex = \"9999\";\nloadingDiv.style.backgroundColor = \"green\";\nconsole.log(\"show loading items\");\ndocument.body.appendChild(loadingDiv);\ndocument.body.appendChild(backgroundDiv);\n\n// Load stored data on extension open\nchrome.storage.local.get(\"yourItemList\", function (data) {\n  console.log(\"loading stoared items\");\n  const storedItemList = data.yourItemList || [];\n  displayItems(storedItemList);\n});\n\nwindow.addEventListener(\"load\", (event) => {\n  console.log(\"removing loading items\");\n  loadingDiv.remove();\n  backgroundDiv.remove();\n});\n\nfunction displayItems(itemListData) {\n  console.log(\"displaying loaded items\");\n  listOfItems.innerHTML = \"\";\n  itemListData.forEach(function (item) {\n    addNewItem(item);\n  });\n}\n\nfunction addNewItem(item) {\n  console.log(\"prepare to adding item to interface...\", item);\n  const div = document.createElement(\"div\");\n  div.className = \"info-item\";\n\n  let itemContent = recognitionItems(item);\n\n  const editButton = createButtons(\"Edit\", \"edit-button\", () =>\n    editItem(item, itemContent)\n  );\n  const deleteButton = createButtons(\"Delete\", \"delete-button\", () =>\n    deleteItem(item.createdAt)\n  );\n\n  // Set data-createdAt attribute to the createdAt value\n  div.dataset.createdAt = item.createdAt;\n\n  div.appendChild(itemContent);\n  div.appendChild(editButton);\n  div.appendChild(deleteButton);\n  listOfItems.insertBefore(div, listOfItems.firstChild);\n}\n\n// Function to create a button with a specific label and click handler\nfunction createButtons(label, className, clickHandler) {\n  const button = document.createElement(\"button\");\n  button.className = className;\n  button.innerText = label;\n  button.type = \"button\";\n  button.addEventListener(\"click\", clickHandler);\n  return button;\n}\n\nfunction deleteItem(createdAt) {\n  console.log(\"prepare to delete item with createdAt:\", createdAt);\n  chrome.storage.local.get(\"yourItemList\", function (data) {\n    const storedList = data.yourItemList || [];\n\n    const indexToRemove = storedList.findIndex(\n      (item) => item.createdAt === createdAt\n    );\n\n    if (indexToRemove !== -1) {\n      const itemToRemove = document.querySelector(\n        `[data-created-at=\"${createdAt}\"]`\n      );\n\n      if (itemToRemove) {\n        // Добавляем класс с анимацией перед удалением\n        itemToRemove.classList.add(\"slide-out\");\n\n        // Ждем завершения анимации, затем удаляем из интерфейса и обновляем хранилище\n        setTimeout(() => {\n          itemToRemove.remove();\n\n          storedList.splice(indexToRemove, 1);\n          chrome.storage.local.set({ yourItemList: storedList }, function () {\n            createAnimatedElement(\"Item deleted successfully\");\n            console.log(\"Item deleted successfully with createdAt:\", createdAt);\n          });\n        }, 500); // 500 миллисекунд – время анимации\n      } else {\n        createAnimatedElement(\"something went wrong during deleting item\");\n        console.error(\n          \"something went wrong during deleting item with createdAt:\",\n          createdAt\n        );\n      }\n    }\n  });\n}\n\n// Function to handle item editing\nfunction editItem(item, content) {\n  console.log(\"prepare to edit item:\", item);\n  const textarea = createTextArea(item.itemData);\n  const confirmButton = createButtons(\"Confirm\", \"confirm-button\", () =>\n    confirmEdit(item, content, textarea)\n  );\n  const cancelButton = createButtons(\"Cancel\", \"cancel-button\", () =>\n    cancelEdit(item, content, textarea)\n  );\n  const insertImageButton = createButtons(\n    \"Вставить изображение\",\n    \"insert-image-button\",\n    function () {\n      // Вставка фрагмента с флажком изображения в текстовое поле\n      const cursorPos = textarea.selectionStart;\n      const textBeforeCursor = textarea.value.substring(0, cursorPos);\n      const textAfterCursor = textarea.value.substring(cursorPos);\n      const imageFragment = \"(imgUrl:)\";\n      const newText = textBeforeCursor + imageFragment + textAfterCursor;\n      textarea.value = newText;\n    }\n  );\n  const insertLinkButton = createButtons(\n    \"Вставить ссылку\",\n    \"insert-link-button\",\n    function () {\n      // Вставка фрагмента с флажком ссылки в текстовое поле\n      const cursorPos = textarea.selectionStart;\n      const textBeforeCursor = textarea.value.substring(0, cursorPos);\n      const textAfterCursor = textarea.value.substring(cursorPos);\n      const linkFragment = \"(linkUrl:)\";\n      const newText = textBeforeCursor + linkFragment + textAfterCursor;\n      textarea.value = newText;\n    }\n  );\n\n  // Remove the existing buttons\n  const div = content.parentElement;\n  const editButton = div.querySelector(\".edit-button\");\n  const deleteButton = div.querySelector(\".delete-button\");\n  if (editButton) editButton.remove();\n  if (deleteButton) deleteButton.remove();\n\n  content.replaceWith(textarea);\n\n  // Append buttons to the list item\n  div.appendChild(confirmButton);\n  div.appendChild(cancelButton);\n  div.appendChild(insertLinkButton);\n  div.appendChild(insertImageButton);\n\n  console.log(\"editing item....\", item);\n}\n\nfunction createTextArea(content) {\n  const textarea = document.createElement(\"textarea\");\n  textarea.appendChild(document.createTextNode(content));\n  textarea.readOnly = false; // Disable editing\n  textarea.style.border = \"none\"; // No visible border\n  textarea.style.resize = \"none\"; // Disable resizing\n  textarea.style.backgroundColor = \"transparent\";\n  textarea.style.overflow = \"hidden\";\n\n  // Auto-adjust height as the user types\n  textarea.addEventListener(\"input\", function () {\n    // Устанавливаем высоту textarea в scrollHeight плюс небольшой отступ\n    textarea.style.height = textarea.scrollHeight + 10 + \"px\";\n  });\n\n  return textarea;\n}\n\nfunction confirmEdit(item, content, textarea) {\n  console.log(\"prepare to confirm editing item:\", item);\n  item.itemData = textarea.value;\n\n  // Update content in local storage\n  updateLocalStorage(item);\n\n  let newElement = recognitionItems(item);\n\n  // Replace the textarea with the new element\n  const div = textarea.parentElement;\n\n  if (div) {\n    const index = Array.from(div.parentElement.children).indexOf(div);\n\n    if (index !== -1) {\n      div.replaceChild(newElement, textarea);\n      console.log(\"editing blank replaced with new element\");\n\n      // Remove confirm and cancel buttons\n      const confirmButton = div.querySelector(\".confirm-button\");\n      const cancelButton = div.querySelector(\".cancel-button\");\n      const insertLinkButton = div.querySelector(\".insert-link-button\");\n      const insertImageButton = div.querySelector(\".insert-image-button\");\n      if (confirmButton) confirmButton.remove();\n      if (cancelButton) cancelButton.remove();\n      if (insertLinkButton) insertLinkButton.remove();\n      if (insertImageButton) insertImageButton.remove();\n\n      // Restore edit and delete buttons\n      const editButton = createButtons(\"Edit\", \"edit-button\", () =>\n        editItem(item, newElement)\n      );\n      const deleteButton = createButtons(\"Delete\", \"delete-button\", () =>\n        deleteItem(item.createdAt)\n      );\n      div.appendChild(editButton);\n      div.appendChild(deleteButton);\n    }\n  }\n}\n\nfunction recognitionItems(item) {\n  // Create a new element based on the item type\n  let newElement = document.createElement(\"div\");\n\n  if (item.itemData) {\n    createTextWithImageElement(newElement, item.itemData);\n  } else {\n    createEmptyElement(newElement);\n  }\n\n  return newElement;\n}\n\n// function createTextElement(parentElement, textContent) {\n//   const text = document.createElement(\"span\");\n//   text.appendChild(document.createTextNode(textContent));\n//   parentElement.appendChild(text);\n//   console.log(\"replacing editing blank with span...\", textContent);\n// }\n\n// function createLinkElement(parentElement, linkData) {\n//   const link = document.createElement(\"a\");\n//   const linkRegex = /\\(linkUrl:([^)]+)\\)/;\n//   const linkUrl = linkData.match(linkRegex)[1];\n//   link.href = linkUrl;\n//   link.target = \"_blank\"; // Open in a new tab\n//   link.textContent = linkUrl;\n//   parentElement.appendChild(link);\n//   console.log(\"replacing editing blank with link...\", linkUrl);\n// }\n\n// function createImageElement(parentElement, imageData) {\n//   const imageRegex = /\\(imgUrl:([^)]+)\\)/;\n//   const imageUrl = imageData.match(imageRegex)[1];\n\n//   console.log(\"replacing editing blank with img...\", imageUrl);\n//   // Create a span element\n//   const image = document.createElement(\"img\");\n//   image.src = imageUrl;\n\n//   parentElement.appendChild(image);\n\n//   // Create \"Open\" button\n//   const openButton = createButtons(\"Открыть\", \"open-button\", function () {\n//     window.open(imageUrl, \"_blank\");\n//   });\n//   parentElement.appendChild(openButton);\n// }\n\nfunction createTextWithImageElement(parent, text) {\n  console.log(\"replacing editing blank with custom...\", text);\n  let remainingText = text;\n\n  while (remainingText) {\n    const imgMatch = remainingText.match(/\\(imgUrl:([^)]+)\\)/);\n    const linkMatch = remainingText.match(/\\(linkUrl:([^)]+)\\)/);\n\n    if (imgMatch && (!linkMatch || imgMatch.index < linkMatch.index)) {\n      // (imgUrl:...) found\n      const textBefore = remainingText.substring(0, imgMatch.index);\n      if (textBefore) {\n        const textElement = document.createElement(\"span\");\n        textElement.appendChild(document.createTextNode(textBefore));\n        parent.appendChild(textElement);\n      }\n\n      const imgElement = document.createElement(\"img\");\n      imgElement.src = imgMatch[1];\n      imgElement.addEventListener(\"click\", function () {\n        // Действие при клике на изображение\n        // Например, открывать изображение в новой вкладке\n        window.open(imgMatch[1], \"_blank\");\n      });\n      imgElement.style.cursor = \"pointer\";\n      parent.appendChild(imgElement);\n\n      remainingText = remainingText.substring(\n        imgMatch.index + imgMatch[0].length\n      );\n    } else if (linkMatch && (!imgMatch || linkMatch.index < imgMatch.index)) {\n      // (linkUrl:...) found\n      const textBefore = remainingText.substring(0, linkMatch.index);\n      if (textBefore) {\n        const textElement = document.createElement(\"span\");\n        textElement.appendChild(document.createTextNode(textBefore));\n        parent.appendChild(textElement);\n      }\n\n      const linkElement = document.createElement(\"a\");\n      linkElement.href = linkMatch[1];\n      linkElement.target = \"_blank\"; // Open in a new tab\n      linkElement.textContent = linkMatch[1];\n      parent.appendChild(linkElement);\n\n      remainingText = remainingText.substring(\n        linkMatch.index + linkMatch[0].length\n      );\n    } else {\n      // No (imgUrl:...) or (url:...) found\n      const textElement = document.createElement(\"span\");\n      textElement.appendChild(document.createTextNode(remainingText));\n      parent.appendChild(textElement);\n      remainingText = \"\";\n    }\n  }\n}\n\nfunction createEmptyElement(parentElement) {\n  createAnimatedElement(\"Invalid item type\");\n  console.error(\"Invalid item type\");\n  const empty = document.createElement(\"span\");\n  empty.appendChild(document.createTextNode(\"Empty.\"));\n  parentElement.appendChild(empty);\n}\n\nfunction cancelEdit(item, content, textarea) {\n  console.log(\"prepare to cancel editing item:\", item);\n  // Replace the textarea with the original span\n  const div = textarea.parentElement;\n\n  if (div) {\n    const index = Array.from(div.parentElement.children).indexOf(div);\n\n    if (index !== -1) {\n      div.replaceChild(content, textarea);\n      console.log(\"editing canceled\");\n\n      // Remove confirm and cancel buttons\n      const confirmButton = div.querySelector(\".confirm-button\");\n      const cancelButton = div.querySelector(\".cancel-button\");\n      if (confirmButton) confirmButton.remove();\n      if (cancelButton) cancelButton.remove();\n\n      // Restore edit and delete buttons\n      const editButton = createButtons(\"Edit\", \"edit-button\", () =>\n        editItem(item, content)\n      );\n      const deleteButton = createButtons(\"Delete\", \"delete-button\", () =>\n        deleteItem(item.createdAt)\n      );\n      div.appendChild(editButton);\n      div.appendChild(deleteButton);\n    } else {\n      createAnimatedElement(\"something went wrong during canceling editing\");\n      console.error(\"something went wrong during canceling editing\", item);\n    }\n  }\n}\n\nfunction updateLocalStorage(item) {\n  console.log(\"prepare to update local storage with item:\", item);\n  chrome.storage.local.get(\"yourItemList\", function (data) {\n    const storedList = data.yourItemList || [];\n\n    // Find the index of the item in local storage\n    const index = storedList.findIndex(\n      (storedItem) => storedItem.createdAt === item.createdAt\n    );\n\n    if (index !== -1) {\n      // Update the item's content\n      storedList[index].itemData = item.itemData;\n      console.log(\n        \"item in stored storage replaced with new item content\",\n        item\n      );\n\n      // Save the updated list to local storage\n      chrome.storage.local.set({ yourItemList: storedList }, function () {\n        console.log(\n          \"item in local storage replaced with new item content\",\n          item\n        );\n      });\n    } else {\n      createAnimatedElement(\n        \"something went wrong during updating local storage\"\n      );\n      console.error(\"something went wrong during updating local storage\");\n    }\n  });\n}\n\nlet activeItem = null;\n\nfunction createNewItemWithInput() {\n  console.log(\"creating new custom item\");\n  // Если уже есть активный элемент, удаляем его\n  if (activeItem) {\n    activeItem.remove();\n    activeItem = null;\n  }\n\n  const textArea = createTextArea(\"\");\n\n  const div = document.createElement(\"div\");\n  div.className = \"info-item\";\n\n  textArea.placeholder = \"Введите текст...\";\n  div.appendChild(textArea);\n\n  const confirmButton = createButtons(\"Confirm\", \"confirm-button\", function () {\n    console.log(\"confirmin creating new custom item...\");\n    const text = textArea.value.trim();\n    if (text !== \"\") {\n      // Обработка текста и фрагментов изображений\n      const newItem = {\n        itemType: \"custom\",\n        itemData: text,\n        createdAt: new Date().getTime(),\n      };\n      if (newItem) {\n        console.log(\"saving new custom item...\");\n        saveNewItem(newItem);\n      } else {\n        createAnimatedElement(\n          \"something went wrong during saving new custom item\"\n        );\n        console.error(\"something went wrong during saving new custom item\");\n      }\n      div.remove();\n      // Add the new item to the interface\n      if (newItem) {\n        console.log(\"adding new custom item to the interface...\");\n        addNewItem(newItem);\n      } else {\n        createAnimatedElement(\n          \"something went wrong during adding new custom item to interface\"\n        );\n        console.error(\n          \"something went wrong during adding new custom item to interface\"\n        );\n      }\n    } else {\n      createAnimatedElement(\"Новый элемент не может быть пустым!\");\n    }\n  });\n  div.appendChild(confirmButton);\n\n  const cancelButton = createButtons(\"Cancel\", \"cancel-button\", function () {\n    div.remove();\n  });\n  div.appendChild(cancelButton);\n\n  const insertImageButton = createButtons(\n    \"Вставить изображение\",\n    \"insert-image-button\",\n    function () {\n      // Вставка фрагмента с флажком изображения в текстовое поле\n      const cursorPos = textArea.selectionStart;\n      const textBeforeCursor = textArea.value.substring(0, cursorPos);\n      const textAfterCursor = textArea.value.substring(cursorPos);\n      const imageFragment = \"(imgUrl:)\";\n      const newText = textBeforeCursor + imageFragment + textAfterCursor;\n      textArea.value = newText;\n    }\n  );\n  const insertLinkButton = createButtons(\n    \"Вставить ссылку\",\n    \"insert-link-button\",\n    function () {\n      // Вставка фрагмента с флажком ссылки в текстовое поле\n      const cursorPos = textArea.selectionStart;\n      const textBeforeCursor = textArea.value.substring(0, cursorPos);\n      const textAfterCursor = textArea.value.substring(cursorPos);\n      const linkFragment = \"(linkUrl:)\";\n      const newText = textBeforeCursor + linkFragment + textAfterCursor;\n      textArea.value = newText;\n    }\n  );\n  div.appendChild(insertLinkButton);\n  div.appendChild(insertImageButton);\n\n  // Add the new item to the interface\n  listOfItems.insertBefore(div, listOfItems.firstChild);\n\n  // Set the new active item\n  activeItem = div;\n\n  // Set focus on the input field when creating a new item\n  textArea.focus();\n}\n\nfunction createAnimatedElement(text, bgColor) {\n  const existingElements = document.querySelectorAll(\".animated-element\");\n\n  existingElements.forEach((existingElement) => {\n    const currentBottom = parseFloat(existingElement.style.bottom);\n    existingElement.style.bottom = `${currentBottom + 45}px`; // Увеличиваем расстояние между элементами\n    existingElement.animate(\n      [{ transform: \"translateY(100%)\" }, { transform: \"translateY(0)\" }],\n      {\n        duration: 150,\n        easing: \"ease-out\",\n        fill: \"forwards\",\n      }\n    );\n  });\n\n  // Создаем новый элемент\n  const element = document.createElement(\"div\");\n  element.className = \"animated-element\";\n  element.style.background = bgColor || \"#db3232\";\n  element.style.display = \"flex\";\n  element.style.alignItems = \"center\";\n  element.style.justifyContent = \"center\";\n  element.style.position = \"fixed\";\n  element.style.bottom = \"50px\";\n  element.style.minWidth = \"100px\";\n  element.style.height = \"40px\";\n  element.style.left = \"\";\n  element.style.borderRadius = \"8px\";\n  element.style.overflow = \"hidden\";\n  element.style.color = \"white\"; // Цвет текста черный\n  element.style.transform = \"translateX(-50%) translateY(100%)\"; // Устанавливаем начальное положение внизу\n  element.style.transition = \"transform 0.3s ease-in-out\";\n  element.style.padding = \"0 5px 0 5px\";\n\n  const span = document.createElement(\"span\");\n  span.textContent = text || \"UwU\";\n  span.style.display = \"flex\";\n  span.style.alignItems = \"center\";\n  span.style.justifyContent = \"center\";\n  span.style.width = \"100%\"; // Заполняем всю ширину span для выравнивания текста\n\n  element.appendChild(span);\n  document.body.appendChild(element);\n\n  const textWidth = span.offsetWidth;\n\n  if (textWidth > parseInt(element.style.width)) {\n    // Если ширина текста больше ширины элемента, увеличиваем ширину элемента\n    element.style.width = textWidth + \"px\";\n  }\n\n  /// Добавляем анимацию\n  element.animate(\n    [\n      { transform: \"translateY(100%)\", opacity: 0 },\n      { transform: \"translateY(0)\", opacity: 1 },\n    ],\n    {\n      duration: 150,\n      easing: \"ease-out\",\n      fill: \"forwards\",\n    }\n  );\n\n  // Удаляем элемент через 2.5 секунды\n  setTimeout(() => {\n    element.remove();\n  }, 2500);\n}\n\nfunction saveNewItem(item) {\n  chrome.storage.local.get(\"yourItemList\", function (data) {\n    const storedList = data.yourItemList || [];\n\n    storedList.push(item);\n\n    chrome.storage.local.set({ yourItemList: storedList }, function () {\n      console.log(\"Item saved successfully:\", item);\n    });\n  });\n}\n\nclearAllButton.addEventListener(\"click\", clearItemList);\ncreateItemButton.addEventListener(\"click\", createNewItemWithInput);\nsendMessage.addEventListener(\"click\", () =>\n  createAnimatedElement(\"Проверка-проверка!!\")\n);\n\nfunction clearItemList() {\n  listOfItems.innerHTML = \"\";\n  chrome.storage.local.remove(\"yourItemList\");\n}\n\nrephreshButton.addEventListener(\"click\", function () {\n  chrome.storage.local.get(\"yourItemList\", function (data) {\n    const storedItemList = data.yourItemList || [];\n    displayItems(storedItemList);\n  });\n});\n"],"names":[],"sourceRoot":""}