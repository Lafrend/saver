{"version":3,"file":"contentScript.js","mappings":";;;;;;;AAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,mDAAmD;AAC7F;AACA,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,oCAAoC;AACpC,OAAO;AACP;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI","sources":["webpack://saver/./src/contentScript.js"],"sourcesContent":["\"use strict\";\r\n\r\n// Обработчик сообщений от фонового скрипта\r\nchrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {\r\n  if (request.command === \"getSelectedText\") {\r\n    // Получаем выделенный текст и отправляем его в фоновый скрипт\r\n    const selectedText = window.getSelection().toString().trim();\r\n    chrome.runtime.sendMessage({\r\n      command: \"saveItem\",\r\n      selectedText: selectedText,\r\n    });\r\n  } else if (request.command === \"processImage\" && request.imageUrl) {\r\n    // console.log(\"got command in content.js. \", request.imageUrl);\r\n    // const imageUrl = request.imageUrl;\r\n    // console.log(\"url:\", request.imageUrl);\r\n\r\n    // // Получаем изображение со страницы\r\n    // const image = new Image();\r\n    // image.crossOrigin = \"anonymous\";\r\n    // image.src = imageUrl;\r\n\r\n    // image.onload = function () {\r\n    //   // Создаем элемент для вставки изображения\r\n    //   const imgElement = document.createElement(\"img\");\r\n    //   imgElement.src = imageUrl;\r\n    //   console.log(\"url:\", imageUrl);\r\n\r\n    //   // Создаем контейнер для вставки изображения\r\n    //   const container = document.createElement(\"div\");\r\n    //   container.appendChild(imgElement);\r\n\r\n    //   // Используем dom-to-image для создания снимка контейнера\r\n    //   domtoimage.toPng(container)\r\n    //     .then(function (dataUrl) {\r\n    //       // Отправляем текст в background.js\r\n    //       chrome.runtime.sendMessage({ command: \"imageProcessed\", formattedText: dataUrl });\r\n    //       console.log(\"Nice:\", dataUrl);\r\n    //     })\r\n    //     .catch(function (error) {\r\n    //       console.error(\"Ошибка при форматировании изображения:\", error);\r\n    //     });\r\n    // };\r\n\r\n    // const image = new Image();\r\n    // image.crossOrigin = \"anonymous\";\r\n    // image.src = request.imageUrl;\r\n\r\n    // const canvas = document.createElement(\"canvas\");\r\n    // const ctx = canvas.getContext(\"2d\");\r\n    // canvas.width = image.width;\r\n    // canvas.height = image.height;\r\n\r\n    // ctx.drawImage(image, 0, 0);\r\n\r\n    // canvas.toBlob((blob) => {\r\n    //   const reader = new FileReader();\r\n    //   reader.onloadend = function () {\r\n    //     const base64data = reader.result;\r\n    //     console.log(base64data);\r\n    //     // Теперь у вас есть изображение в формате base64data\r\n    //   };\r\n    //   reader.readAsDataURL(blob);\r\n    // }, \"image/png\");\r\n\r\n    // Выполняем запрос на изображение\r\n    fetch(request.imageUrl)\r\n      .then((response) => response.blob()) // Получаем Blob из ответа\r\n      .then((blob) => {\r\n        // Теперь у вас есть объект Blob, который представляет изображение\r\n        // Можете использовать его, например, для преобразования в Data URL\r\n        const reader = new FileReader();\r\n        reader.onloadend = function () {\r\n          const imageDataUrl = reader.result;\r\n          // Дальнейшая обработка данных изображения\r\n          console.log(\"data:\", imageDataUrl);\r\n          // Отправляем текст в background.js\r\n          chrome.runtime.sendMessage({\r\n            command: \"imageProcessed\",\r\n            formattedText: imageDataUrl,\r\n          });\r\n        };\r\n        reader.readAsDataURL(blob); // Преобразование Blob в Data URL\r\n      })\r\n      .catch((error) =>\r\n        console.error(\"Ошибка при получении изображения:\", error)\r\n      );\r\n  }\r\n});\r\n\r\n// chrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {\r\n//   if (request.command === \"imageProcessed\" && request.formattedText) {\r\n//     // Теперь вы можете использовать request.formattedText в вашем контенте\r\n//     console.log(\"Image processed:\", request.formattedText);\r\n//   }\r\n// });\r\n"],"names":[],"sourceRoot":""}