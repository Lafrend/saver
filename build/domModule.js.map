{"version":3,"file":"domModule.js","mappingssCAAsC,mBAAmB;AACzD;AACA,SAAS,+BAA+B,IAAI,4BAA4B;AACxE,QAAQ;AACR;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qBAAqB,yBAAyB,YAAY;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,2CAA2C;AACnD,QAAQ,wCAAwC;AAChD;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,QAAQ;AAClC;AACA;AACA,kBAAkB,aAAa;AAC/B;AACA;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,0CAA0C,SAAS,aAAa;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,gCAAgC,sBAAsB,EAAE,WAAW;AACnE,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA","sources":["webpack://saver/./src/domModule.js"],"sourcesContent":["function createTabElement(tabName) {\r\n  const tabElement = document.createElement(\"div\");\r\n  tabElement.innerText = tabName;\r\n  tabElement.id = tabName;\r\n  tabElement.className = \"tab other-tab\";\r\n  tabElement.addEventListener(\"click\", () => {\r\n    highlightActiveTab(tabName);\r\n    tabName === \"Main\" ? loadInterface() : loadInterface(tabName);\r\n  });\r\n  return tabElement;\r\n}\r\n\r\nfunction createNewItemWithInput() {\r\n  // Если уже есть активный элемент, удаляем его\r\n  if (activeItem) {\r\n    activeItem.remove();\r\n  }\r\n\r\n  const activeTab = getCurrentTab();\r\n\r\n  const textArea = createTextArea(\"\");\r\n  textArea.placeholder = \"Введите текст...\";\r\n\r\n  const div = createElements(\"div\", \"item\");\r\n\r\n  const confirmButton = createButton(\"Confirm\", \"confirm-button\", function () {\r\n    const text = textArea.value;\r\n    if (text !== \"\") {\r\n      const newItem = {\r\n        createdAt: new Date().getTime(),\r\n        title: \"\",\r\n        itemData: text,\r\n        pinned: false,\r\n        hide: false,\r\n        fav: false,\r\n        color: \"\",\r\n        tab: activeTab,\r\n        list: \"\",\r\n      };\r\n      saveNewItem(newItem)\r\n        .then(() => loadInterface(activeTab))\r\n        .catch((error) => {\r\n          createMessage(\"something went wrong during saving new custom item\");\r\n          console.error(\"Error during saving new item:\", error);\r\n          // Обработка ошибок при сохранении\r\n        });\r\n      div.remove();\r\n    } else {\r\n      createMessage(\"Новый элемент не может быть пустым!\");\r\n    }\r\n  });\r\n\r\n  const cancelButton = createButton(\"Cancel\", \"cancel-button\", function () {\r\n    div.remove();\r\n  });\r\n  div.append(textArea, confirmButton, cancelButton);\r\n\r\n  textArea.addEventListener(\"keydown\", function (event) {\r\n    if (event.key === \"Enter\") {\r\n      confirmButton.click();\r\n    }\r\n  });\r\n  listOfItems.insertBefore(div, listOfItems.firstChild);\r\n\r\n  activeItem = div;\r\n  textArea.focus();\r\n}\r\n\r\nfunction createTextWithImageElement(parent, text) {\r\n  let remainingText = text;\r\n\r\n  while (remainingText) {\r\n    // Распознавание текста изображения (начинающегося с \"data:image/\") с использованием регулярного выражения\r\n    const imageDataMatch = remainingText.match(/data:image\\/[^ ]+/i);\r\n\r\n    if (imageDataMatch) {\r\n      const textBefore = remainingText.substring(0, imageDataMatch.index);\r\n      if (textBefore) {\r\n        const textElement = document.createElement(\"span\");\r\n        textElement.appendChild(document.createTextNode(textBefore));\r\n        parent.appendChild(textElement);\r\n      }\r\n\r\n      const imgElement = createImageElement(imageDataMatch[0]);\r\n      parent.appendChild(imgElement);\r\n\r\n      remainingText = remainingText.substring(\r\n        imageDataMatch.index + imageDataMatch[0].length\r\n      );\r\n    } else {\r\n      // Если не найдено совпадение для текста изображения, продолжаем поиск обычных URL\r\n      const urlMatch = remainingText.match(/https?:\\/\\/[^ ]+/i);\r\n\r\n      if (urlMatch) {\r\n        const textBefore = remainingText.substring(0, urlMatch.index);\r\n        if (textBefore) {\r\n          const textElement = document.createElement(\"span\");\r\n          textElement.appendChild(document.createTextNode(textBefore));\r\n          parent.appendChild(textElement);\r\n        }\r\n\r\n        const element = urlMatch[0].match(/\\.(png|jpeg|jpg|webp)$/i)\r\n          ? createImageElement(urlMatch[0])\r\n          : createLinkElement(urlMatch[0]);\r\n\r\n        parent.appendChild(element);\r\n\r\n        remainingText = remainingText.substring(\r\n          urlMatch.index + urlMatch[0].length\r\n        );\r\n      } else {\r\n        const textElement = document.createElement(\"span\");\r\n        textElement.appendChild(document.createTextNode(remainingText));\r\n        parent.appendChild(textElement);\r\n        remainingText = \"\";\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction createMessage(text, bgColor) {\r\n  const existingElements = document.querySelectorAll(\".animated-element\");\r\n\r\n  existingElements.forEach((existingElement) => {\r\n    const currentBottom = parseFloat(existingElement.style.bottom);\r\n    existingElement.style.bottom = `${currentBottom + 45}px`;\r\n    existingElement.animate(\r\n      [{ transform: \"translateY(100%)\" }, { transform: \"translateY(0)\" }],\r\n      { duration: 150, easing: \"ease-out\", fill: \"forwards\" }\r\n    );\r\n  });\r\n\r\n  const element = createElements(\"div\", \"animated-element\");\r\n  element.style.backgroundColor = bgColor || \"#db3232\";\r\n  element.style.bottom = \"45px\";\r\n\r\n  const span = document.createElement(\"span\");\r\n  span.textContent = text || \"UwU\";\r\n  span.style.cssText =\r\n    \"display: flex; align-items: center; justify-content: center; width: 100%;\";\r\n\r\n  element.appendChild(span);\r\n  document.body.appendChild(element);\r\n\r\n  const textWidth = span.offsetWidth;\r\n  element.style.width =\r\n    textWidth > parseInt(element.style.width)\r\n      ? textWidth + \"px\"\r\n      : element.style.width;\r\n\r\n  element.animate(\r\n    [\r\n      { transform: \"translateY(100%)\", opacity: 0 },\r\n      { transform: \"translateY(0)\", opacity: 1 },\r\n    ],\r\n    { duration: 150, easing: \"ease-out\", fill: \"forwards\" }\r\n  );\r\n\r\n  // Удаляем элемент через 2.5 секунды\r\n  setTimeout(() => element.remove(), 2500);\r\n}\r\n\r\nfunction createNumberedList(number) {\r\n  console.log(`creating ${number} items`);\r\n  const itemList = [];\r\n\r\n  for (let i = 1; i <= number; i++) {\r\n    const newItem = {\r\n      createdAt: new Date().getTime(),\r\n      title: \"\",\r\n      itemData: `item №${i}`,\r\n      pinned: false,\r\n      hide: false,\r\n      fav: false,\r\n      color: \"\",\r\n      tab: \"\",\r\n      list: \"\",\r\n    };\r\n\r\n    itemList.push(newItem);\r\n  }\r\n  itemList.forEach(function (item) {\r\n    addNewItem(item);\r\n  });\r\n}\r\n\r\nfunction createImageElement(imageUrl) {\r\n  const imgElement = document.createElement(\"img\");\r\n  imgElement.loading = \"lazy\";\r\n  imgElement.src = imageUrl;\r\n  // // Получение изображения по URL в виде Blob\r\n  // async function getImageBlob(url) {\r\n  //   const response = await fetch(url);\r\n  //   const blob = await response.blob();\r\n  //   return blob;\r\n  // }\r\n  // // Преобразование Blob в строку base64\r\n  // function blobToBase64(blob) {\r\n  //   return new Promise((resolve, reject) => {\r\n  //     const reader = new FileReader();\r\n  //     reader.onloadend = function () {\r\n  //       resolve(reader.result.split(\",\")[1]);\r\n  //     };\r\n  //     reader.onerror = reject;\r\n  //     reader.readAsDataURL(blob);\r\n  //   });\r\n  // }\r\n  // // Получение Blob изображения по URL\r\n  // getImageBlob(imageUrl)\r\n  //   .then((blob) => {\r\n  //     // Преобразование Blob в строку base64\r\n  //     return blobToBase64(blob);\r\n  //   })\r\n  //   .then((base64String) => {\r\n  //     // Вывод строки base64 в консоль (можно использовать как нужно)\r\n  //     imgElement.src = `data:image/png;base64,${base64String}`;\r\n\r\n  //     const byteSize = base64String.length;\r\n  //     let sizeString, sizeValue;\r\n\r\n  //     if (byteSize < 1024) {\r\n  //       sizeString = \"B\";\r\n  //       sizeValue = byteSize;\r\n  //     } else if (byteSize < 1024 * 1024) {\r\n  //       sizeString = \"KB\";\r\n  //       sizeValue = byteSize / 1024;\r\n  //     } else {\r\n  //       sizeString = \"MB\";\r\n  //       sizeValue = byteSize / (1024 * 1024);\r\n  //     }\r\n\r\n  //     // Вывод размера в консоль\r\n  //     console.log(`Размер: ${sizeValue.toFixed(2)} ${sizeString}`);\r\n  //   })\r\n  //   .catch((error) => {\r\n  //     console.error(\"Ошибка:\", error);\r\n  //   });\r\n  imgElement.addEventListener(\"click\", function () {\r\n    window.open(imageUrl, \"_blank\");\r\n  });\r\n  imgElement.style.cursor = \"pointer\";\r\n  return imgElement;\r\n}\r\n\r\nfunction createLinkElement(linkUrl) {\r\n  const linkElement = document.createElement(\"a\");\r\n  linkElement.href = linkUrl;\r\n  linkElement.target = \"_blank\";\r\n  linkElement.textContent = linkUrl;\r\n  return linkElement;\r\n}\r\n\r\nfunction createEmptyElement(parentElement) {\r\n  createMessage(\"Invalid item type\");\r\n  console.error(\"Invalid item type\");\r\n  const empty = document.createElement(\"span\");\r\n  empty.appendChild(document.createTextNode(\"Empty.\"));\r\n  parentElement.appendChild(empty);\r\n}\r\n\r\nfunction createTextArea(content) {\r\n  const textarea = document.createElement(\"textarea\");\r\n  textarea.value = content;\r\n\r\n  // Используем событие 'input' для динамического изменения высоты при вводе\r\n  textarea.addEventListener(\"input\", function () {\r\n    textarea.style.height = \"auto\";\r\n    textarea.style.height = textarea.scrollHeight + \"px\";\r\n  });\r\n  // Используем событие 'focus' для корректного изменения высоты при редактировании\r\n  textarea.addEventListener(\"focus\", function () {\r\n    textarea.style.height = \"auto\";\r\n    textarea.style.height = textarea.scrollHeight + \"px\";\r\n  });\r\n\r\n  return textarea;\r\n}\r\n\r\nfunction createElements(tag, className) {\r\n  const element = document.createElement(tag);\r\n  if (className) element.className = className;\r\n  return element;\r\n}\r\n\r\nfunction createButton(label, className, clickHandler) {\r\n  const button = createElements(\"button\", className);\r\n  button.innerText = label;\r\n  button.type = \"button\";\r\n  button.addEventListener(\"click\", clickHandler);\r\n  return button;\r\n}\r\n\r\nfunction createDropdownList(item) {\r\n  const dropdownList = document.createElement(\"select\");\r\n  dropdownList.className = \"dropdown-list\";\r\n\r\n  const defaultOption = document.createElement(\"option\");\r\n  defaultOption.text = \"Move to...\";\r\n  defaultOption.value = \"\";\r\n  dropdownList.add(defaultOption);\r\n\r\n  const tabList = document.getElementById(\"tab-list\");\r\n  tabList.childNodes.forEach((tab) => {\r\n    const option = document.createElement(\"option\");\r\n    option.value = tab.innerText;\r\n    option.text = tab.innerText;\r\n    dropdownList.add(option);\r\n  });\r\n\r\n  dropdownList.addEventListener(\"change\", () => {\r\n    moveItemToTab(item, dropdownList.value);\r\n  });\r\n\r\n  return dropdownList;\r\n}\r\n"],"names":[],"sourceRoot":""}